<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chat">
	<delete id="deleteRoom">
		DELETE FROM CHATTING_GROUP WHERE CHAT_ROOM_KEY = ${roomId}
	</delete>
	<update id="exitChatRoom" parameterType = "map">
		UPDATE CHATTING_GROUP SET CHAT_GROUP_STATUS = 'N' WHERE MEMBER_KEY = ${memberId}
	</update>
	<select id="selectGroupStatus" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM CHATTING_GROUP WHERE CHAT_ROOM_KEY = ${roomId} AND CHAT_GROUP_STATUS = 'Y'
	</select>
	<insert id="insertChattingFile" parameterType="chattingFile">
		    INSERT INTO chatting_file (
	        CHAT_FILE_KEY,
			MEMBER_KEY,
			CHAT_MSG_FILE_ORI,
			CHAT_MSG_FILE_POST,
			CHAT_FILE_TIME,
			CHAT_ROOM_KEY,
			CHAT_MSG_KEY,
			FILE_CONTENT_TYPE
		    ) VALUES (
		        #{chatFileKey},
		        #{memberKey},
		        #{chatMsgFileOri},
		        #{chatMsgFilePost},
		        #{chatFileTime},
		        #{chatRoomKey},
		        #{chatMsgKey},
		        #{fileContentType}
		    )
	</insert>
	<delete id="deleteReadBadge" parameterType="map">
		DELETE 
		FROM CHATTING_IS_READ cir 
		WHERE cir.chat_msg_key  IN
			(SELECT CHAT_IS_READ_KEY 
			FROM CHATTING_IS_READ cir 
			LEFT JOIN CHATTING_MESSAGE cm 
			ON cir.CHAT_MSG_KEY = cm.CHAT_MSG_KEY 
			WHERE cm.CHAT_ROOM_KEY = #{currRoomId})
		AND cir.member_key = #{currMemberKey}
	</delete>
	<select id="selectUnreadCount" parameterType="map" resultType="int">		
		SELECT Count(*)
		FROM   chatting_is_read cir
		       LEFT JOIN chatting_message cm
		              ON cir.chat_msg_key = cm.chat_msg_key
		WHERE  cir.member_key = #{memberKey}
		       AND cm.chat_room_key = #{roomId}
		       AND cm.member_key != #{memberKey} 
	</select>
	<select id="selectMyChatRoomList" parameterType="int" resultMap="chattingRoomResultMap">
		SELECT * 
		FROM CHATTING_ROOM cr
		LEFT JOIN CHATTING_GROUP cg 
		ON cr.CHAT_ROOM_key = cg.CHAT_ROOM_key
		LEFT JOIN CHATTING_MESSAGE cm on cr.CHAT_RECENT_MSG_KEY = cm.CHAT_MSG_KEY 
		WHERE cg.MEMBER_key = #{memberId} AND CG.CHAT_GROUP_STATUS='Y'
			ORDER BY chat_msg_time desc
	</select>
	<update id="updateRecentChat" parameterType="map">
		UPDATE CHATTING_ROOM SET CHAT_RECENT_MSG_KEY = #{seq} WHERE CHAT_ROOM_KEY = #{chat.chatRoomKey}
	</update>
	<delete id="deleteChatRead" parameterType="map">
		DELETE FROM CHATTING_IS_READ WHERE CHAT_MSG_KEY = #{chatList.chatMsgKey} AND MEMBER_KEY = #{loginMemberKey}
	</delete>
	<select id="insertChattingRoom" parameterType="int">
		INSERT INTO CHATTING_ROOM VALUES(#{roomId},'1',null)
	</select>
	<select id="getSequenceValue" resultType="int">
        SELECT SEQ_CHAT_ROOM_KEY.nextval FROM dual
    </select>
	<select id="selectRoomId" resultType="java.lang.Integer" parameterType="map">
    SELECT CHAT_ROOM_KEY
    FROM (
        SELECT CHAT_ROOM_KEY, MIN(CHAT_GROUP_DATE) AS CREATED_AT
        FROM CHATTING_GROUP
        WHERE CHAT_ROOM_KEY IN (
            SELECT CHAT_ROOM_KEY
            FROM CHATTING_GROUP
            WHERE MEMBER_KEY IN 
            <foreach item="item" collection="memberNos" open="(" separator="," close=")">
                #{item}
            </foreach>
            GROUP BY CHAT_ROOM_KEY
            HAVING COUNT(DISTINCT MEMBER_KEY) = #{memberSize}
        )
        GROUP BY CHAT_ROOM_KEY
        HAVING COUNT(*) = #{memberSize}
        ORDER BY CREATED_AT ASC
    )
    WHERE ROWNUM = 1

		
	</select>
	
    <insert id="insertSingleRoomId" parameterType="map">
        INSERT INTO CHATTING_GROUP (CHAT_GROUP_KEY,CHAT_ROOM_KEY, member_KEY, CHAT_GROUP_STATUS,CHAT_GROUP_DATE)
        VALUES (SEQ_CHAT_GROUP_KEY.nextval,#{roomId}, #{memberNo},'Y',SYSDATE)
    </insert>
	
	<insert id="insertChat" parameterType="map">
    	INSERT INTO CHATTING_MESSAGE VALUES (#{seq},#{chat.memberKey}, #{chat.chatRoomKey},  #{chat.chatMsgDetail}, #{chat.chatMsgTime},'N',#{readCount})
	</insert>
	<insert id="insertChattingIsRead" parameterType="map">
		INSERT INTO CHATTING_IS_READ values(SEQ_CHAT_IS_READ_KEY.nextval,#{seq},#{member.memberKey})
	</insert>
	<select id="selectRoomChatList" parameterType="_int" resultMap="chattingMessageResultMap">
		    SELECT 
			cm.CHAT_MSG_KEY,
			cm.MEMBER_KEY,
			cm.CHAT_ROOM_KEY,
			cm.CHAT_MSG_DETAIL,
			cm.CHAT_MSG_TIME,
			cm.CHAT_MSG_NOTICE,
			cm.CHAT_READ_COUNT,
			cf.CHAT_MSG_FILE_POST,
			cf.FILE_CONTENT_TYPE ,
			m.MEMBER_NAME 
		FROM chatting_message cm 
		LEFT JOIN chatting_file cf ON cm.chat_msg_key = cf.chat_msg_key 
		LEFT JOIN MEMBER m ON cm.MEMBER_KEY  = m.MEMBER_KEY 
		WHERE CM.chat_room_key = ${roomNo}
		ORDER BY chat_msg_time ASC
	</select>
	<select id="selectMyRoomMembers" parameterType="ChattingMessage" resultMap="chattingGroupResultMap">
		SELECT DISTINCT MEMBER_KEY FROM CHATTING_GROUP WHERE CHAT_ROOM_KEY=#{chatRoomKey} and MEMBER_KEY != #{memberKey}
	</select>
	<insert id="insertRoomId" parameterType="string">
    	INSERT INTO CHATTING_GROUP VALUES (SEQ_CHAT_GROUP_KEY.nextval,#{m})
	</insert>
	
	<select id="selectMyRoomMemberList" resultMap="memberResultMap" parameterType="int">
		SELECT *
			FROM CHATTING_GROUP cg
			LEFT JOIN MEMBER m ON cg.MEMBER_KEY = m.MEMBER_KEY
			WHERE cg.CHAT_ROOM_KEY = #{i} and cg.CHAT_GROUP_STATUS='Y'
	</select>
	<select id="selectMyRoomId" parameterType="int" resultType="int">
		SELECT cr.CHAT_ROOM_KEY FROM CHATTING_GROUP crg 
		LEFT JOIN CHATTING_ROOM cr ON crg.CHAT_ROOM_KEY=cr.CHAT_ROOM_KEY 
		LEFT JOIN CHATTING_MESSAGE cm ON CHAT_RECENT_MSG_KEY = CHAT_MSG_KEY 
		WHERE crg.MEMBER_KEY = #{memberNo}
		ORDER BY chat_msg_time desc
	</select>
	
	<select id="selectChatSeq" resultType="int">
		select SEQ_CHAT_MESSAGE_KEY.nextval from dual
	</select>
	<select id="selectFileSeq" resultType="int">
		select SEQ_CHAT_FILE_KEY.nextval from dual
	</select>
	<select id="selectReadCount" resultType="int" parameterType="ChattingMessage">
			SELECT sum(is_read) FROM CHAT_READ_STATUS WHERE CHAT_ID=#{seq}
	</select>
	

	<update id="updateChatReadCount" parameterType="map">
		UPDATE CHATTING_MESSAGE 
		SET chat_read_count = 
			(SELECT COUNT(*) FROM CHATTING_IS_READ WHERE CHAT_MSG_KEY =  #{chatList.chatMsgKey})
		WHERE chat_msg_key = #{chatList.chatMsgKey}
	</update>
	
	
	
	<select id="countRoomMember" parameterType="int" resultType="int">
		select count(*) from CHATTING_GROUP where chat_room_key = #{roomId}
	</select>
	
	<insert id="insertChatMember" parameterType="map" >
		        INSERT INTO CHATTING_GROUP (CHAT_GROUP_KEY,CHAT_ROOM_KEY, member_KEY, CHAT_GROUP_STATUS,CHAT_GROUP_DATE)
        VALUES (SEQ_CHAT_GROUP_KEY.nextval,#{roomId}, #{memberId},'Y',SYSDATE)
		
	</insert>
	
	<select id="selectUnreadCurrent" parameterType="int" resultType="int">
    	SELECT COUNT(*) FROM CHATTING_IS_READ cir WHERE MEMBER_KEY = #{memberKey}
    </select>

    <resultMap id="chattingMessageResultMap" type="chattingMessage">
        <id property="chatMsgKey" column="CHAT_MSG_KEY"/>
        <result property="memberKey" column="MEMBER_KEY"/>
        <result property="chatRoomKey" column="CHAT_ROOM_KEY"/>
        <result property="chatMsgDetail" column="CHAT_MSG_DETAIL"/>
        <result property="chatMsgTime" column="CHAT_MSG_TIME"/>
        <result property="chatMsgNotice" column="CHAT_MSG_NOTICE"/>
        <result property="chatReadCount" column="CHAT_READ_COUNT"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <association property="file" javaType="com.project.npnc.chatting.model.dto.ChattingFile">
            <id property="chatMsgFilePost" column="CHAT_MSG_FILE_POST" />
            <result property="fileContentType" column="FILE_CONTENT_TYPE" />
        </association>
    </resultMap>
	
	<resultMap type="chattingGroup" id="chattingGroupResultMap">
		<id property="chatGroupKey" column="CHAT_GROUP_KEY"/>
	    <result property="memberKey" column="MEMBER_KEY"/>
	    <result property="chatRoomKey" column="CHAT_ROOM_KEY"/>
	</resultMap>
	
	
	<resultMap type="chattingRoom" id="chattingRoomResultMap">
		<id property="chatRoomKey" column="CHAT_ROOM_KEY"/>
	    <result property="chatStatus" column="CHAT_STATUS"/>
	    <result property="chatRecentMsgKey" column="CHAT_RECENT_MSG_KEY"/>
	    <result property="chatMsgTime" column="CHAT_MSG_TIME"/>
	</resultMap>
	
    <resultMap id="memberResultMap" type="member">
        <id property="memberKey" column="MEMBER_KEY" />
        <result property="departmentKey" column="DEPARTMENT_KEY" />
        <result property="jobKey" column="JOB_KEY" />
        <result property="memberId" column="MEMBER_ID" />
        <result property="memberPw" column="MEMBER_PW" />
        <result property="memberPhone" column="MEMBER_PHONE" />
        <result property="memberEmail" column="MEMBER_EMAIL" />
        <result property="memberMessage" column="MEMBER_MESSAGE" />
        <result property="enrollDate" column="ENROLL_DATE" />
        <result property="memberLeaveDate" column="MEMBER_LEAVE_DATE" />
        <result property="memberTell" column="MEMBER_TELL" />
        <result property="memberAddress" column="MEMBER_ADDRESS" />
        <result property="accessKey" column="ACCESS_KEY" />
        <result property="memberName" column="MEMBER_NAME" />
    </resultMap>
    
    <resultMap id="ChattingFileResultMap" type="chattingFile">
        <id property="chatFileKey" column="CHAT_FILE_KEY" />
        <result property="memberKey" column="MEMBER_KEY" />
        <result property="chatMsgFileOri" column="CHAT_MSG_FILE_ORI" />
        <result property="chatMsgFilePost" column="CHAT_MSG_FILE_POST" />
        <result property="chatFileTime" column="CHAT_FILE_TIME" />
        <result property="chatRoomKey" column="CHAT_ROOM_KEY" />
        <result property="chatMsgKey" column="CHAT_MSG_KEY" />
    </resultMap>


	

	
</mapper>




