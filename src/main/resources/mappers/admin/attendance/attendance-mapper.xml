<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="attendance">

	<resultMap type="attendance" id="attendanceMap">
		<id column="ATTENDANCE_KEY" property="attendanceKey"/>
		<result column="ATTENDANCE_DATE" property="attendanceDate"/>
		<result column="ATTENDANCE_START" property="attendanceStart"/>
		<result column="ATTENDANCE_END" property="attendanceEnd"/>
		<result column="ATTENDANCE_STATE" property="attendanceState"/>
		<result column="OVERTIME_KEY" property="overtimeKey"/>
		<association property="member" resultMap="adminmember.memberMap"/>
	</resultMap>
	
	<!-- <resultMap type="overtimework" id="overtimeworkMap">
		<id column="OVERTIME_KEY" property="overtimeKey"/>
		<result column="ER_DOC_SERIAL_KEY" property="ErDocSerialKey"/>
		<result column="OVERTIME_APPLY_DATE" property="overtimeApplyDate"/>
		<result column="OVERTIME_DATE" property="overtimeDate"/>
		<result column="OVERTIME_REASON" property="overtimeReason"/>
		<result column="OVERTIME_STATUS" property="overtimeStatus"/>
		<result column="OVERTIME_START_TIME" property="overtimeStartTime"/>
		<result column="OVERTIME_END_TIME" property="overtimeEndTime"/>
		<result column="OVERTIME_MEMBER_KEY" property="overtimeMemberKey"/>
		<result column="OVERTIME_CATEGORY" property="overtimeCategory"/>
	</resultMap> -->
	
	<insert id="startAttendance" parameterType="attendance">
		INSERT INTO ATTENDANCE
			VALUES(SEQ_ATTENDANCE.NEXTVAL,#{member.memberKey},SYSDATE,
			TO_DATE(SYSDATE || #{attendanceStart}, 'YYYY-MM-DD HH24:MI:SS'),
			NULL,#{attendanceState},NULL)
	</insert>
	
	<select id="selectAttendanceByAttendanceKey" resultMap="attendanceMap" parameterType="_int">
		SELECT 
			ATTENDANCE_KEY,
		    ATTENDANCE_DATE,
		    ATTENDANCE_START,
		    ATTENDANCE_END,
		    ATTENDANCE_STATE,
		    OVERTIME_KEY
		    	FROM ATTENDANCE
		    	WHERE ATTENDANCE_KEY=#{attendanceKey}
	</select>
	
	<select id="selectAttendanceAll" resultMap="attendanceMap" parameterType="_int">
		SELECT 
			ATTENDANCE_KEY,
		    ATTENDANCE_DATE,
		    ATTENDANCE_START,
		    ATTENDANCE_END,
		    ATTENDANCE_STATE,
		    OVERTIME_KEY
				FROM ATTENDANCE
				WHERE MEMBER_KEY=#{memberKey}
				ORDER BY ATTENDANCE_DATE DESC
				
	</select>
	
	<select id="selectAttendanceCount" resultType="_int" parameterType="_int">
		SELECT COUNT(ATTENDANCE_KEY) 
			FROM ATTENDANCE 
			WHERE MEMBER_KEY=#{memberKey}
	</select>
	
	<select id="selectAttendanceByMemberKeyAndDate" parameterType="_int" resultType="_int">
		SELECT COUNT(ATTENDANCE_KEY) 
			FROM ATTENDANCE 
			WHERE MEMBER_KEY=#{memberKey} 
			AND TRUNC(ATTENDANCE_DATE)=TRUNC(SYSDATE)
	</select>
	
	<select id="selectAttendanceKeyByMemberKeyAndDate" parameterType="_int" resultType="_int">
		SELECT ATTENDANCE_KEY 
			FROM ATTENDANCE 
			WHERE MEMBER_KEY=#{memberKey} 
			AND TRUNC(ATTENDANCE_DATE)=TRUNC(SYSDATE)
	</select>

	<select id="selectAttendanceByMemberKey" parameterType="_int" resultMap="attendanceMap">
		SELECT 
			ATTENDANCE_KEY,
		    ATTENDANCE_DATE,
		    ATTENDANCE_START,
		    ATTENDANCE_END,
		    ATTENDANCE_STATE,
		    OVERTIME_KEY 
			FROM ATTENDANCE 
			WHERE MEMBER_KEY=#{memberKey} 
			AND TRUNC(ATTENDANCE_DATE)=TRUNC(SYSDATE)
	</select>

	<update id="endAttendance" parameterType="attendance">
		UPDATE ATTENDANCE 
			SET ATTENDANCE_END=TO_DATE(SYSDATE || #{attendanceEnd}, 'YYYY-MM-DD HH24:MI:SS'),
			ATTENDANCE_STATE=#{attendanceState} 
			WHERE ATTENDANCE_KEY=#{attendanceKey}
	</update>
	
	<update id="updateAttendanceState" parameterType="attendance">
		UPDATE ATTENDANCE 
			SET ATTENDANCE_STATE=#{attendanceState} 
			WHERE MEMBER_KEY=#{member.memberKey} 
			AND TRUNC(ATTENDANCE_DATE)=TRUNC(SYSDATE)
	</update>
	
	<select id="selectAttendanceToday" resultMap="attendanceMap">
		SELECT 
			ATTENDANCE_KEY,
		    ATTENDANCE_DATE,
		    ATTENDANCE_START,
		    ATTENDANCE_END,
		    ATTENDANCE_STATE,
		    OVERTIME_KEY
			FROM ATTENDANCE 
			WHERE TRUNC(ATTENDANCE_DATE)=TRUNC(SYSDATE)
	</select>
	
	<insert id="insertAbsent" parameterType="_int">
		INSERT INTO ATTENDANCE 
		VALUES(SEQ_ATTENDANCE.NEXTVAL,#{memberKey},SYSDATE,NULL,NULL,'결근',NULL)
	</insert>

	<select id="searchAttendance" parameterType="map" resultMap="attendanceMap">
		SELECT 
			ATTENDANCE_KEY,
		    ATTENDANCE_DATE,
		    ATTENDANCE_START,
		    ATTENDANCE_END,
		    ATTENDANCE_STATE,
		    OVERTIME_KEY
			FROM ATTENDANCE 
			JOIN MEMBER USING(MEMBER_KEY)
			<where>
				MEMBER_KEY=#{memberKey}
				<if test="searchType !=null and searchType!= ''">
					AND ATTENDANCE_STATE=#{searchType}
				</if>
				<if test="(searchStartDate != null and searchStartDate !='') and (searchEndDate != null and searchEndDate != '')">
	        		AND ATTENDANCE_DATE BETWEEN #{searchStartDate} AND #{searchEndDate}
	   			</if>
			</where>
			ORDER BY ATTENDANCE_DATE DESC
	</select>
	
	<select id="searchAttendanceCount" parameterType="map" resultType="_int">
		SELECT 
			COUNT(ATTENDANCE_KEY)
			FROM ATTENDANCE 
			<where>
				MEMBER_KEY=#{memberKey}
				<if test="searchType !=null and searchType!= ''">
					AND ATTENDANCE_STATE=#{searchType}
				</if>
				<if test="(searchStartDate != null and searchStartDate !='') and (searchEndDate != null and searchEndDate != '')">
	        		AND ATTENDANCE_DATE BETWEEN #{searchStartDate} AND #{searchEndDate}
	   			</if>
			</where>
			ORDER BY ATTENDANCE_DATE DESC
	</select>

	<select id="selectAttendanceMonthCount" parameterType="attendance" resultType="_int">
		SELECT 
		COUNT(ATTENDANCE_KEY) 
		FROM ATTENDANCE 
		WHERE MEMBER_KEY=#{member.memberKey}
         AND ATTENDANCE_STATE=#{attendanceState}
         AND ATTENDANCE_DATE BETWEEN TRUNC(SYSDATE, 'MM') 
                           AND LAST_DAY(SYSDATE)
	</select>


	<!-- attendanceEdit -->

	<resultMap type="attendanceEdit" id="attendanceEditMap">
		<id column="ATTENDANCE_EDIT_KEY" property="attendanceEditKey"/>
		<result column="ATTENDANCE_EDIT_MEMBER"  property="attendanceEditMember"/>
		<result column="ATTENDANCE_EDIT_DATE"  property="attendanceEditDate"/>
		<result column="ATTENDANCE_EDIT_REQUEST_DATE"  property="attendanceEditRequestDate"/>
		<result column="ATTENDANCE_EDIT_STARTEND"  property="attendanceEditStartEnd"/>
		<result column="ATTENDANCE_EDIT_BEFORETIME"  property="attendanceEditBeforeTime"/>
		<result column="ATTENDANCE_EDIT_BEFORE_STATE"  property="attendanceEditBeforeState"/>
		<result column="ATTENDANCE_EDIT_AFTERTIME"  property="attendanceEditAfterTime"/>
		<result column="ATTENDANCE_EDIT_AFTER_STATE"  property="attendanceEditAfterState"/>
		<result column="ATTENDANCE_EDIT_REQUEST"  property="attendanceEditRequest"/>
		<result column="ATTENDANCE_EDIT_OPINION"  property="attendanceEditOpinion"/>
		<result column="ATTENDANCE_EDIT_STATE"  property="attendanceEditState"/>
		<association property="attendance" resultMap="attendance.attendanceMap"/>
	</resultMap>


	<insert id="insertAttendanceEdit" parameterType="attendanceEdit">
		INSERT INTO ATTENDANCE_EDIT
		VALUES (SEQ_ATTENDANCE_EDIT.NEXTVAL,
            #{attendance.attendanceKey},
            #{attendanceEditMember},
            #{attendanceEditDate},
            #{attendanceEditRequestDate},
            #{attendanceEditStartEnd},
            <choose>
            <when test="attendanceEditBeforeTime != null and attendanceEditBeforeTime != ''">
                TO_TIMESTAMP('20' || #{attendanceEditBeforeTime}, 'YYYY-MM-DD HH24:MI:SS')
            </when>
            <otherwise>
                NULL
            </otherwise>
        	</choose>,
            #{attendanceEditBeforeState},
            TO_TIMESTAMP(to_char(#{attendanceEditRequestDate},'yyyy-mm-dd') ||' '||#{attendanceEditAfterTime}, 'YYYY-MM-DD HH24:MI:SS'),
            #{attendanceEditAfterState},
            #{attendanceEditRequest},
            '',
            '처리중') 
	</insert>

	<select id="selectAttendanceEditById" parameterType="string" resultMap="attendanceEditMap">
		SELECT 
		ATTENDANCE_EDIT_KEY, 
		ATTENDANCE_KEY, 
		ATTENDANCE_EDIT_MEMBER, 
		ATTENDANCE_EDIT_DATE, 
		ATTENDANCE_EDIT_REQUEST_DATE, 
		ATTENDANCE_EDIT_STARTEND, 
		ATTENDANCE_EDIT_BEFORETIME, 
		ATTENDANCE_EDIT_BEFORE_STATE, 
		ATTENDANCE_EDIT_AFTERTIME, 
		ATTENDANCE_EDIT_AFTER_STATE, 
		ATTENDANCE_EDIT_REQUEST, 
		ATTENDANCE_EDIT_OPINION,
		ATTENDANCE_EDIT_STATE
		FROM   ATTENDANCE_EDIT
		WHERE  ATTENDANCE_EDIT_MEMBER = #{memberId} 
		ORDER BY ATTENDANCE_EDIT_DATE DESC
	</select>

	<select id="selectAttendanceEditCount" resultType="_int">
		SELECT
		COUNT(ATTENDANCE_EDIT_KEY) 
		FROM ATTENDANCE_EDIT
		WHERE ATTENDANCE_EDIT_MEMBER = #{memberId} 
	</select>

	<select id="selectAttendanceEditByKey" resultMap="attendanceEditMap" parameterType="_int">
		SELECT 
		ATTENDANCE_EDIT_KEY, 
		ATTENDANCE_KEY, 
		ATTENDANCE_EDIT_MEMBER, 
		ATTENDANCE_EDIT_DATE, 
		ATTENDANCE_EDIT_REQUEST_DATE, 
		ATTENDANCE_EDIT_STARTEND, 
		ATTENDANCE_EDIT_BEFORETIME, 
		ATTENDANCE_EDIT_BEFORE_STATE, 
		ATTENDANCE_EDIT_AFTERTIME, 
		ATTENDANCE_EDIT_AFTER_STATE, 
		ATTENDANCE_EDIT_REQUEST, 
		ATTENDANCE_EDIT_OPINION,
		ATTENDANCE_EDIT_STATE
		FROM ATTENDANCE_EDIT
		WHERE ATTENDANCE_EDIT_KEY=#{attendanceEditKey}
	</select>

	<delete id="deleteAttendanceEdit" parameterType="_int">
		DELETE FROM ATTENDANCE_EDIT
		WHERE ATTENDANCE_EDIT_KEY=#{attendanceEditKey} 
	</delete>

	<select id="searchAttendanceEdit" parameterType="map" resultMap="attendanceEditMap">
		SELECT 
		ATTENDANCE_EDIT_KEY, 
		ATTENDANCE_KEY, 
		ATTENDANCE_EDIT_MEMBER, 
		ATTENDANCE_EDIT_DATE, 
		ATTENDANCE_EDIT_REQUEST_DATE, 
		ATTENDANCE_EDIT_STARTEND, 
		ATTENDANCE_EDIT_BEFORETIME, 
		ATTENDANCE_EDIT_BEFORE_STATE, 
		ATTENDANCE_EDIT_AFTERTIME, 
		ATTENDANCE_EDIT_AFTER_STATE, 
		ATTENDANCE_EDIT_REQUEST, 
		ATTENDANCE_EDIT_OPINION,
		ATTENDANCE_EDIT_STATE
		FROM ATTENDANCE_EDIT
		<where>
			ATTENDANCE_EDIT_MEMBER=#{memberId}
		<if test="searchType != null and searchType !='' ">
			AND ATTENDANCE_EDIT_STATE=#{searchType}
		</if>
		</where>
		ORDER BY ATTENDANCE_EDIT_DATE DESC
	</select>
	
	<select id="searchAttendanceEditCount" parameterType="map" resultType="_int">
		SELECT 
		COUNT(ATTENDANCE_EDIT_KEY) 
		FROM ATTENDANCE_EDIT
		<where>
			ATTENDANCE_EDIT_MEMBER=#{memberId}
		<if test="searchType != null and searchType !='' ">
			AND ATTENDANCE_EDIT_STATE=#{searchType}
		</if>
		</where>
	</select>



<!-- admin attendance  -->

	<select id="selectAdminAttendanceAll" resultMap="attendanceMap">
		SELECT 
			ATTENDANCE_KEY,
		    ATTENDANCE_DATE,
		    ATTENDANCE_START,
		    ATTENDANCE_END,
		    ATTENDANCE_STATE,
		    OVERTIME_KEY,
		    MEMBER_ID,
		    MEMBER_NAME
		    FROM ATTENDANCE 
		    JOIN MEMBER USING(MEMBER_KEY)
		    ORDER BY ATTENDANCE_DATE DESC
	</select>

	<select id="selectAdminAttendanceAllCount" resultType="_int">
		SELECT 
			COUNT(ATTENDANCE_KEY) 
			FROM ATTENDANCE
	</select>
	
	<select id="selectAdminAttendanceEditAll" resultMap="attendanceEditMap">
		SELECT 
		ATTENDANCE_EDIT_KEY, 
		ATTENDANCE_KEY, 
		ATTENDANCE_EDIT_MEMBER, 
		ATTENDANCE_EDIT_DATE, 
		ATTENDANCE_EDIT_REQUEST_DATE, 
		ATTENDANCE_EDIT_STARTEND, 
		ATTENDANCE_EDIT_BEFORETIME, 
		ATTENDANCE_EDIT_BEFORE_STATE, 
		ATTENDANCE_EDIT_AFTERTIME, 
		ATTENDANCE_EDIT_AFTER_STATE, 
		ATTENDANCE_EDIT_REQUEST, 
		ATTENDANCE_EDIT_OPINION,
		ATTENDANCE_EDIT_STATE
		FROM ATTENDANCE_EDIT
		ORDER BY ATTENDANCE_EDIT_DATE DESC
	</select>
	
	<select id="selectAdminAttendanceEditCount" resultType="_int">
		SELECT 
		COUNT(ATTENDANCE_EDIT_KEY)
		FROM ATTENDANCE_EDIT	
	</select>

	<update id="updateAttendanceEdit" parameterType="attendanceEdit">
		UPDATE ATTENDANCE_EDIT 
		SET ATTENDANCE_EDIT_OPINION=#{attendanceEditOpinion},
		ATTENDANCE_EDIT_STATE='반려' 
		WHERE ATTENDANCE_EDIT_KEY=#{attendanceEditKey}
	</update>

	<update id="updateAttendanceEditState" parameterType="attendanceEdit">
		UPDATE ATTENDANCE_EDIT
		SET ATTENDANCE_EDIT_STATE='승인',
			ATTENDANCE_EDIT_OPINION=#{attendanceEditOpinion}
		WHERE ATTENDANCE_EDIT_KEY=#{attendanceEditKey}
	</update>
	
	<update id="updateAttendance" parameterType="attendanceEdit">
		UPDATE ATTENDANCE
		SET
		<choose>
	       	<when test="attendanceEditStartEnd != null and attendanceEditStartEnd == '출근'">
	          	ATTENDANCE_START=#{attendanceEditAfterTime}
	        </when>
	        <otherwise>
	            ATTENDANCE_END=#{attendanceEditAfterTime}
	        </otherwise>
      	</choose>,
      	ATTENDANCE_STATE=#{attendanceEditAfterState}
      	WHERE ATTENDANCE_KEY=#{attendance.attendanceKey}
      	
	</update>
	
	<select id="selectAdminAttendanceBymemberKey" parameterType="_int" resultMap="attendanceMap">
		SELECT 
			ATTENDANCE_KEY,
		    ATTENDANCE_DATE,
		    ATTENDANCE_START,
		    ATTENDANCE_END,
		    ATTENDANCE_STATE,
		    OVERTIME_KEY
		    FROM ATTENDANCE
		    WHERE MEMBER_KEY=#{memberKey}
		    ORDER BY ATTENDANCE_DATE DESC
	</select>
	
	<select id="selectAdminAttendanceBymemberKeyCount" resultType="_int" parameterType="_int">
		SELECT 
			COUNT(ATTENDANCE_KEY)
			FROM ATTENDANCE
		    WHERE MEMBER_KEY=#{memberKey}
	</select>
	
	<select id="searchAdminAttendanceEdit" parameterType="map" resultMap="attendanceEditMap">
		SELECT
		ATTENDANCE_EDIT_KEY, 
		ATTENDANCE_KEY, 
		ATTENDANCE_EDIT_MEMBER, 
		ATTENDANCE_EDIT_DATE, 
		ATTENDANCE_EDIT_REQUEST_DATE, 
		ATTENDANCE_EDIT_STARTEND, 
		ATTENDANCE_EDIT_BEFORETIME, 
		ATTENDANCE_EDIT_BEFORE_STATE, 
		ATTENDANCE_EDIT_AFTERTIME, 
		ATTENDANCE_EDIT_AFTER_STATE, 
		ATTENDANCE_EDIT_REQUEST, 
		ATTENDANCE_EDIT_OPINION,
		ATTENDANCE_EDIT_STATE
		FROM ATTENDANCE_EDIT
		<where>
			<if test="searchType !=null and searchType!= ''">
				ATTENDANCE_EDIT_STATE=#{searchType}
			</if>
			<if test="searchType !=null and searchType!= '' and searchKey !=null and searchKey != ''" >
				AND
			</if>
			<if test="searchKey !=null and searchKey != ''">
				ATTENDANCE_EDIT_MEMBER LIKE '%' || #{searchKey} || '%'
			</if>
		</where>
	</select>
	
	<select id="searchAdminAttendanceEditCount" parameterType="map" resultType="_int">
		SELECT
		COUNT(ATTENDANCE_EDIT_KEY) 
		FROM ATTENDANCE_EDIT
		<where>
			<if test="searchType !=null and searchType!= ''">
				ATTENDANCE_EDIT_STATE=#{searchType}
			</if>
			<if test="searchType !=null and searchType!= '' and searchKey !=null and searchKey != ''" >
				AND
			</if>
			<if test="searchKey !=null and searchKey != ''">
				ATTENDANCE_EDIT_MEMBER LIKE '%' || #{searchKey} || '%'
			</if>
		</where>
	</select>
	
	<select id="searchAdminAttendance" parameterType="map" resultMap="attendanceMap">
		SELECT
		ATTENDANCE_KEY,
		    ATTENDANCE_DATE,
		    ATTENDANCE_START,
		    ATTENDANCE_END,
		    ATTENDANCE_STATE,
		    OVERTIME_KEY,
		    MEMBER_ID,
		    MEMBER_NAME
		    FROM ATTENDANCE 
		    JOIN MEMBER USING(MEMBER_KEY)
		<where>
			<if test="searchType !=null and searchType!= ''">
				ATTENDANCE_STATE=#{searchType}
			</if>
			<if test="(searchType !=null and searchType!= '') and (searchKey !=null and searchKey != '')" >
				AND
			</if>
			<if test="searchKey !=null and searchKey != ''">
				MEMBER_NAME LIKE '%' || #{searchKey} || '%'
			</if>
			<if test="((searchType !=null and searchType!= '') or (searchKey !=null and searchKey != '')) 
				and (searchStartDate != null and searchEndDate != null) and (searchStartDate != '' and searchEndDate != '')">
				AND 
			</if>
			<if test="(searchStartDate != null and searchStartDate !='') and (searchEndDate != null and searchEndDate != '')">
        		ATTENDANCE_DATE BETWEEN #{searchStartDate} AND #{searchEndDate}
   			</if>
		</where>
		ORDER BY ATTENDANCE_DATE DESC
	</select>
	
	<select id="searchAdminAttendanceCount" parameterType="map" resultType="_int">
		SELECT
		COUNT(ATTENDANCE_KEY)
		FROM ATTENDANCE 
		JOIN MEMBER USING(MEMBER_KEY)
		<where>
			<if test="searchType !=null and searchType!= ''">
				ATTENDANCE_STATE=#{searchType}
			</if>
			<if test="searchType !=null and searchType!= '' and searchKey !=null and searchKey != ''" >
				AND
			</if>
			<if test="searchKey !=null and searchKey != ''">
				MEMBER_NAME LIKE '%' || #{searchKey} || '%'
			</if>
			<if test="((searchType !=null and searchType!= '') or (searchKey !=null and searchKey != '')) 
				and searchStartDate != null and searchEndDate != null and searchStartDate != '' and searchEndDate != ''">
				AND 
			</if>
			<if test="searchStartDate != null and searchEndDate != null and searchStartDate != '' and searchEndDate != ''">
        		ATTENDANCE_DATE BETWEEN #{searchStartDate} AND #{searchEndDate}
   			</if>
		</where>
	</select>
	
	
</mapper>
