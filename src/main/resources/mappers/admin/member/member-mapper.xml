<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminmember">
	
	<resultMap type="adminmember" id="memberMap">
		<id column="MEMBER_KEY" property="memberKey"/>
<!-- 	<result column="DEPARTMENT_KEY" property="departmentKey"/>
		<result column="JOB_KEY" property="jobKey"/> -->
		<result column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_PW" property="memberPw"/>
		<result column="MEMBER_PHONE" property="memberPhone"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
		<result column="MEMBER_MESSAGE" property="memberMessage"/>
		<result column="MEMBER_ENROLL_DATE" property="memberEnrollDate"/>
		<result column="MEMBER_LEAVE_DATE" property="memberLeaveDate"/>
		<result column="MEMBER_TELL" property="memberTell"/>
		<result column="MEMBER_ADDRESS" property="memberAddress"/>
		<result column="ACCESS_KEY" property="accessKey"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="MEMBER_GENDER" property="memberGender"/>
		<result column="MEMBER_STATE" property="memberState"/>
		<result column="MEMBER_BIRTHDATE" property="memberBirthdate"/>
		<result column="MEMBER_PROFILE_IMAGE" property="memberProfileImage"/>
		<association property="department" resultMap="department.deptMap"/>
		<association property="job" resultMap="job.jobMap"/>
	</resultMap>

	<select id="selectMemberAll" resultMap="memberMap">
		SELECT 
		MEMBER_KEY,
		DEPARTMENT_KEY,
		JOB_KEY, 
		MEMBER_ID, 
		MEMBER_PW, 
		MEMBER_PHONE, 
		MEMBER_EMAIL, 
		MEMBER_MESSAGE, 
		MEMBER_ENROLL_DATE, 
		MEMBER_LEAVE_DATE, 
		MEMBER_TELL, 
		MEMBER_ADDRESS, 
		ACCESS_KEY, 
		MEMBER_NAME, 
		MEMBER_GENDER, 
		MEMBER_STATE, 
		MEMBER_BIRTHDATE, 
		MEMBER_PROFILE_IMAGE,
		DEPARTMENT_NAME,
		JOB_NAME
			FROM MEMBER 
			LEFT JOIN DEPARTMENT USING(DEPARTMENT_KEY) 
			LEFT JOIN JOB USING(JOB_KEY) 
			ORDER BY MEMBER_ENROLL_DATE DESC
	</select>

	<select id="selectMemberCount" resultType="_int">
		SELECT COUNT(MEMBER_KEY) 
			FROM MEMBER
	</select>
	
	<select id="selectMemberByNo" resultMap="memberMap" parameterType="_int">
		SELECT 		
		MEMBER_KEY,
		DEPARTMENT_KEY,
		JOB_KEY, 
		MEMBER_ID, 
		MEMBER_PW, 
		MEMBER_PHONE, 
		MEMBER_EMAIL, 
		MEMBER_MESSAGE, 
		MEMBER_ENROLL_DATE, 
		MEMBER_LEAVE_DATE, 
		MEMBER_TELL, 
		MEMBER_ADDRESS, 
		ACCESS_KEY, 
		MEMBER_NAME, 
		MEMBER_GENDER, 
		MEMBER_STATE, 
		MEMBER_BIRTHDATE, 
		MEMBER_PROFILE_IMAGE
			FROM MEMBER 
			WHERE MEMBER_KEY=#{memberKey}
	</select>
	
	<select id="selectMemberKeyById" parameterType="string" resultType="_int">
		SELECT MEMBER_KEY 
			FROM MEMBER 
			WHERE MEMBER_ID='${memberId}'
	</select>
	
	<insert id="insertMember" parameterType="adminmember">
		<selectKey keyProperty="memberKey" order="BEFORE" resultType="int">
			SELECT SEQ_MEMBER.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO 
			MEMBER(
	        MEMBER_KEY,
	        DEPARTMENT_KEY,
	        JOB_KEY,
	        MEMBER_ID,
	        MEMBER_PW,
	        MEMBER_PHONE,
	        MEMBER_EMAIL,
	        MEMBER_MESSAGE,
	        MEMBER_ENROLL_DATE,
	        MEMBER_LEAVE_DATE,
	        MEMBER_TELL,
	        MEMBER_ADDRESS,
	        ACCESS_KEY,
	        MEMBER_NAME,
	        MEMBER_GENDER,
	        MEMBER_STATE,
	        MEMBER_BIRTHDATE,
	        MEMBER_PROFILE_IMAGE
	    	)
			VALUES(#{memberKey},
				#{department.deptKey},
				#{job.jobKey},
				'NPNC'||SEQ_MEMBER.CURRVAL,
				#{memberPw},
				#{memberPhone},
				#{memberEmail},
				'안녕하세요',
				#{memberEnrollDate},
				NULL,
				#{memberTell},
				#{memberAddress},
				#{accessKey},
				#{memberName},
				#{memberGender},
				'재직',
				#{memberBirthdate},
				'basicPicture')
			
	</insert>
	
	<update id="updateMember" parameterType="adminmember">
		UPDATE MEMBER 
			SET DEPARTMENT_KEY=#{department.deptKey},JOB_KEY=#{job.jobKey},MEMBER_PHONE=#{memberPhone},MEMBER_EMAIL=#{memberEmail},
			MEMBER_TELL=#{memberTell},MEMBER_ADDRESS=#{memberAddress},ACCESS_KEY=#{accessKey},MEMBER_NAME=#{memberName},
			MEMBER_STATE=#{memberState},MEMBER_BIRTHDATE=#{memberBirthdate},MEMBER_LEAVE_DATE=#{memberLeaveDate} WHERE MEMBER_ID=#{memberId}		
	</update>
	
	<delete id="deleteMember" parameterType="adminmember">
		DELETE 
			FROM MEMBER 
			WHERE MEMBER_KEY=#{memberKey}
	</delete>
	
	<select id="selectMemberKeyAll" resultType="_int">
		SELECT MEMBER_KEY 
			FROM MEMBER
	</select>
	
	<select id="searchMember" parameterType="map" resultMap="memberMap">
		SELECT 
		MEMBER_KEY,
		DEPARTMENT_KEY,
		JOB_KEY, 
		MEMBER_ID, 
		MEMBER_PW, 
		MEMBER_PHONE, 
		MEMBER_EMAIL, 
		MEMBER_MESSAGE, 
		MEMBER_ENROLL_DATE, 
		MEMBER_LEAVE_DATE, 
		MEMBER_TELL, 
		MEMBER_ADDRESS, 
		ACCESS_KEY, 
		MEMBER_NAME, 
		MEMBER_GENDER, 
		MEMBER_STATE, 
		MEMBER_BIRTHDATE, 
		MEMBER_PROFILE_IMAGE,
		DEPARTMENT_NAME,
		JOB_NAME
		FROM MEMBER
		LEFT JOIN DEPARTMENT USING(DEPARTMENT_KEY) 
		LEFT JOIN JOB USING(JOB_KEY) 
		<where>
			MEMBER_NAME LIKE '%' || #{searchKey} || '%'
			<if test="searchType != null and searchType !='' ">
				AND MEMBER_STATE=#{searchType}
			</if>
		</where>
		ORDER BY MEMBER_ENROLL_DATE DESC
	</select>
	
	<select id="searchMemberCount" parameterType="map" resultType="_int">
	SELECT 
	COUNT(MEMBER_KEY)
	FROM MEMBER
	<where>
		MEMBER_NAME LIKE '%' || #{searchKey} || '%'
		<if test="searchType != null and searchType !='' ">
			AND MEMBER_STATE=#{searchType}
		</if>
	</where>
	
	</select>
</mapper>
