<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="document">   
	<resultMap id="documentMap" type="document">
		<id column="er_doc_key" property="erDocKey"/>
	    <result column="ER_DOC_SERIAL_KEY" property="erDocSerialKey"/>
	    <result column="er_doc_writer" property="erDocWriter"/>
	    <result column="writer_dept_key" property="writerDeptKey"/>
	    <result column="writer_dept_name" property="writerDeptName"/>
	    <result column="writer_job_key" property="writerJobKey"/>
	    <result column="writer_job_name" property="writerJobName"/>
	    <result column="er_doc_title" property="erDocTitle"/>
	    <result column="er_doc_create_date" property="erDocCreateDate"/>
	    <result column="er_doc_emergency_yn" property="erDocEmergencyYn"/>
	    <result column="er_doc_delete_yn" property="erDocDeleteYn"/>
	    <result column="er_doc_storage_key" property="erDocStorageKey"/>
	    <result column="ER_STORAGE_NAME" property="erDocStorageName"/>
	    <result column="er_doc_filename" property="erDocFilename"/>
	    <result column="er_doc_state" property="erDocState"/>
	    <result column="er_doc_state_update_date" property="erDocStateUpdateDate"/>
	    <result column="er_doc_last_updater" property="erDocLastUpdater"/>
	    <result column="er_doc_update_date" property="erDocUpdateDate"/>
	    <result column="ER_DOC_COMPLETE_DATE" property="erDocCompleteDate"/>
	    <result column="er_doc_update_reason" property="erDocUpdateReason"/>
	    <result column="ER_DOC_COMPLETE_DATE" property="erDocCompleteDate"/>
	    <result column="ER_DOC_FORM_KEY" property="docFormKey"/>
	    <result column="er_storage_term" property="erDocStorageTerm"/>
	    <result column="er_folder_name" property="erDocStorageFolderName"/>
		<collection property="approvers" resultMap="approverMap" ofType="approver"/>
		<collection property="referers" resultMap="refererMap" ofType="referer"/>
		<collection property="files" resultMap="docFileMap" ofType="docFile"/>
	</resultMap>
	<resultMap id="approverMap" type="approver">
		<id column="ER_APPROVER_KEY" property="erApproverKey"/>
		<result column="MEMBER_KEY" property="memberKey"/>
		<result column="ER_APPROVER_NAME" property="memberName"/>
		<result column="ER_APPROVER_TEAM_KEY" property="memberTeamKey"/>
		<result column="ER_APPROVER_JOB_KEY" property="memberJobKey"/>
		<result column="DEPARTMENT_NAME" property="memberTeamName"/>
		<result column="JOB_NAME" property="memberJobName"/> 
		<result column="ER_APPROVAL_CATEGORY" property="category"/>
		<result column="ER_APPROVAL_STATE" property="state"/>
		<result column="ER_APPROVAL_OPINION" property="opinion"/>
		<result column="ER_DOC_SERIAL_KEY" property="erDocSerialKey"/>
		<result column="ER_APPROVAL_DATE" property="date"/>
		<result column="ER_APPROVAL_ORDERBY" property="orderby"/>
	</resultMap>
	<resultMap id="refererMap" type="referer">
		<id column="ER_REFERER_KEY" property="erRefererKey"/>
		<result column="ER_DOC_SERIAL_KEY" property="erDocSerialKey"/>
		<result column="ER_REFERER_TEAM_KEY" property="memberTeamKey"/>
		<result column="ER_REFERER_TEAM_NAME" property="memberTeamName"/>
		<result column="ER_REFERER_JOB_KEY" property="memberJobKey"/>
		<result column="ER_REFERER_JOB_NAME" property="memberJobName"/>
		<result column="ER_REFERER_NAME" property="memberName"/>
		<result column="MEMBER_KEY" property="memberKey"/>
	</resultMap>
	<resultMap type="docFile" id="docFileMap">
		<id column="er_file_key" property="fileKey"/>
		<result column="er_file_ori_name" property="fileOriName"/>
		<result column="er_file_rename" property="fileRename"/>
		<result column="ER_DOC_KEY" property="erDocKey"/>
		<result column="ER_DOC_SERIAL_KEY" property="erDocSerialKey"/>
		<result column="ER_FILE_SIZE" property="fileSize"/>
		<result column="ER_FILE_FORM" property="fileForm"/>
		<result column="ER_FILE_UPLOAD_DATE" property="fileUploadDate"/>
		<result column="ER_FILE_ORDERBY" property="fileOrderby"/>
		<result column="ER_FILE_UPLODAER" property="fileUploader"/>
		<result column="ER_FILE_UPDATE_DATE" property="fileUpdateDate"/>
		<result column="ER_FILE_UPDATER" property="fileUpdater"/>
		<result column="ER_FILE_UPDATE_REASON" property="fileUpdateReason"/>
	</resultMap>
	<resultMap type="approverLine" id="approverLineMap">
		<id column="ER_AP_LINE_KEY" property="erApLineKey"/>
		<result column="ER_AP_LINE_STORAGE_KEY" property="erApLineStorageKey"/>
		<result column="MEMBER_KEY" property="memberKey"/>
		<result column="ER_AP_KEY" property="erApKey"/>
		<result column="ER_AP_TEAM_KEY" property="erApTeamKey"/>
		<result column="DEPARTMENT_NAME" property="erApTeamName"/>
		<result column="ER_AP_JOB_KEY" property="erApJobKey"/>
		<result column="JOB_NAME" property="erApJobName"/>
		<result column="ER_AP_NAME" property="erApName"/>
		<result column="ER_AP_CATEGORY" property="erApCategory"/>
		<result column="ER_AP_ORDERBY" property="erApOrderby"/>
	</resultMap>
	<resultMap type="approverLineStorage" id="approverLineStorageMap">
		<id column="ER_AP_LINE_STORAGE_KEY" property="erApLineStorageKey"/>
		<result column="ER_AP_LINE_STORAGE_NAME" property="erApLineStorageName"/>
		<result column="OWNER_MEMBER_KEY" property="memberKey"/>
		<collection property="approvers" resultMap="approverLineMap" ofType="approverLine"/>
	</resultMap>
	<resultMap type="vacationApply" id="vacationApplyMap">
		<id column="VACATION_USE_KEY" property="vacationUseKey"/>
		<result column="VACATION_KEY" property="vacationKey"/>
		<result column="ER_DOCUMENT_KEY" property="vacationDocSerialKey"/>
		<result column="VACATION_APPLY_DATE" property="vacationApplyDate"/>
		<result column="VACATION_APPLY_STATUS" property="vacationApplyStatus"/>
		<result column="VACATION_START_DATE" property="vacationStartDate"/>
		<result column="VACATION_END_DATE" property="vacationEndDate"/>
		<result column="VACATION_USE_COUNT" property="vacationUseCount"/>
		<result column="VACATION_MEMBER_KEY" property="vacationMemberKey"/>
		<result column="VACATION_REASON" property="vacationReason"/>
		<result column="MEMBER_VAC_KEY" property="memberVacKey"/>
		<result column="VACATION_UPDATE_DATE" property="vacationUpdateDate"/>		
	</resultMap>
	<resultMap type="OvertimeApply" id="OvertimeApplyMap">
		<id column="OVERTIME_KEY" property="overtimeKey"/>
		<result column="ER_DOC_SERIAL_KEY" property="erDocSerialKey"/>
		<result column="OVERTIME_APPLY_DATE" property="overtimeApplyDate"/>
		<result column="OVERTIME_DATE" property="overtimeDate"/>
		<result column="OVERTIME_REASON" property="overtimeReason"/>
		<result column="OVERTIME_STATUS" property="overtimeStatus"/>
		<result column="OVERTIME_START_TIME" property="overtimeStartTime"/>
		<result column="OVERTIME_END_TIME" property="overtimeEndTime"/>
		<result column="OVERTIME_MEMBER_KEY" property="overtimeMemberKey"/>
		<result column="OVERTIME_CATEGORY" property="overtimeCategory"/>
		<result column="OVERTIME_UPDATE_DATE" property="overtimeUpdateDate"/>
	</resultMap>
	
	<!-- 양식 -->
	<select id="selectformFolders" resultType="map">
		SELECT 
			er_form_folder_key,
			er_form_folder_name,
			er_form_folder_creater,
			er_form_folder_createdate,
			er_form_folder_updater,
			er_form_folder_updatedate,
			er_form_folder_orderby
		FROM   
			er_form_folder
		ORDER BY 
			er_form_folder_orderby  
	</select>
	<select id="selectFormByNo" resultType="map" parameterType="_int">
		SELECT 
			er_form_key,
			er_form_name,
			er_form_creater,
			er_form_create_date,
			er_form_folder_key,
			er_form_yn,
			er_form_updater,
			er_form_update_date,
			er_form_orderby,
			er_doc_filename
		FROM   
			er_form 
	</select>
	<select id="selectForms" resultType="map" parameterType="_int">
		SELECT 
			er_form_key,
		    er_form_name,
		    er_form_creater,
		    er_form_create_date,
		    er_form_folder_key,
		    er_form_yn,
		    er_form_updater,
		    er_form_update_date,
		    er_form_orderby,
		    er_doc_filename
		FROM   
			er_form
		WHERE  
			er_form_yn = 'Y'
        AND 
        	er_form_folder_key = #{no}
		ORDER BY 
			er_form_orderby 
	</select>
	<select id="selectFormsBySearch" resultType="map" parameterType="string">
		SELECT 
			er_form_key,
			er_form_name,
			er_form_creater,
			er_form_create_date,
			er_form_folder_key,
			er_form_yn,
			er_form_updater,
			er_form_update_date,
			er_form_orderby,
			er_doc_filename
		FROM   
			er_form
		WHERE  
			er_form_yn = 'Y'
		AND 
			er_form_name LIKE #{target}
		ORDER BY 
			er_form_orderby DESC,
	        er_doc_create_date DESC 
	</select>
	
	<!-- 문서 -->
	<!-- 로그인 사원의 진행 중인 문서 조회 -->
	<select id="selectInprocessDocs" resultMap="documentMap" parameterType="_int">
		SELECT    
		 	ER_DOC_KEY,
		 	ER_DOC_SERIAL_KEY,
		 	ER_DOC_WRITER,
		 	ER_DOC_TITLE,
		 	ER_DOC_CREATE_DATE,
		 	ER_DOC_EMERGENCY_YN,
		 	ER_DOC_DELETE_YN,
		 	ER_DOC_STORAGE_KEY,
		 	ER_DOC_FILENAME,
		 	ER_DOC_STATE,
		 	ER_DOC_STATE_UPDATE_DATE,
		 	ER_DOC_LAST_UPDATER,
		 	ER_DOC_LAST_UPDATE_REASON,
		 	ER_APPROVER_KEY,
		 	MEMBER_KEY,
		 	ER_APPROVER_NAME,
		 	ER_APPROVER_TEAM_KEY,
		 	ER_APPROVER_JOB_KEY,
		 	ER_APPROVAL_CATEGORY,
		 	ER_APPROVAL_STATE,
		 	ER_APPROVAL_OPINION,
		 	ER_APPROVAL_DATE,
		 	ER_APPROVAL_ORDERBY,
		 	JOB_KEY,
		 	JOB_NAME,
		 	DEPARTMENT_KEY,
		 	DEPARTMENT_NAME
		FROM      
		 	ER_DOCUMENT d
		LEFT JOIN
			ER_APROVER ea USING(ER_DOC_SERIAL_KEY)
		JOIN
			JOB j ON ea.ER_APPROVER_JOB_KEY = j.JOB_KEY 
		JOIN
			DEPARTMENT d2 ON ea.ER_APPROVER_TEAM_KEY = d2.DEPARTMENT_KEY 
		WHERE     
			ER_DOC_WRITER = #{no}
		AND       
			ER_DOC_STATE = '처리중'
		ORDER BY  
			ER_DOC_EMERGENCY_YN DESC,
			ER_DOC_CREATE_DATE DESC,
			ER_APPROVAL_ORDERBY
	</select>
	<!-- 로그인 사원의 임시저장 문서 조회 -->
	<select id="selectDraftDocs" resultMap="documentMap" parameterType="_int">
		SELECT    
		 	ER_DOC_KEY,
		 	ER_DOC_SERIAL_KEY,
		 	ER_DOC_WRITER,
		 	ER_DOC_TITLE,
		 	ER_DOC_CREATE_DATE,
		 	ER_DOC_EMERGENCY_YN,
		 	ER_DOC_DELETE_YN,
		 	ER_DOC_STORAGE_KEY,
		 	ER_DOC_FILENAME,
		 	ER_DOC_STATE,
		 	ER_DOC_STATE_UPDATE_DATE,
		 	ER_DOC_LAST_UPDATER,
		 	ER_DOC_LAST_UPDATE_REASON
		FROM      
		 	ER_DOCUMENT d
		WHERE     
			ER_DOC_WRITER = #{no}
		AND       
			ER_DOC_STATE = '임시저장'
		ORDER BY  
			ER_DOC_EMERGENCY_YN DESC,
			ER_DOC_CREATE_DATE DESC
	</select>
	
	<!-- 로그인 사원의 결재 대기 문서 조회 -->
	<select id="selectWaitingDocs" resultMap="documentMap" parameterType="int">
		WITH FilteredDocs AS (
		    SELECT 
		        ed.ER_DOC_KEY,
		        ed.ER_DOC_SERIAL_KEY,
		        ed.ER_DOC_WRITER,
		        m.department_key,
		        d2.department_name,
		        m.job_key,
		        j2.job_name,
		        ed.ER_DOC_TITLE,
		        ed.ER_DOC_CREATE_DATE,
		        ed.ER_DOC_EMERGENCY_YN,
		        ed.ER_DOC_DELETE_YN,
		        ed.ER_DOC_STORAGE_KEY,
		        ed.ER_DOC_FILENAME,
		        ed.ER_DOC_STATE,
		        ed.ER_DOC_STATE_UPDATE_DATE,
		        ed.ER_DOC_LAST_UPDATER,
		        ed.ER_DOC_LAST_UPDATE_REASON
		    FROM 
		        ER_DOCUMENT ed 
		    JOIN
		        ER_APROVER ea ON ed.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		    LEFT JOIN 
		        MEMBER m ON ed.ER_DOC_WRITER = m.member_key
		    JOIN 
		        DEPARTMENT d2 ON d2.department_key = m.department_key
		    JOIN 
		        job j2 ON j2.job_key = m.job_key
		    WHERE
		        ed.ER_DOC_STATE = '처리중'
		    AND    
		        ea.member_Key = ${no}
		    AND
		        NOT EXISTS (
		            SELECT 1
		            FROM ER_APROVER a
		            WHERE a.ER_DOC_SERIAL_KEY = ed.ER_DOC_SERIAL_KEY
		            AND a.ER_APPROVAL_ORDERBY <![CDATA[<]]> ea.ER_APPROVAL_ORDERBY
		            AND a.ER_APPROVAL_STATE != '승인'
		        )
		)
		SELECT 
		    fd.ER_DOC_KEY,
		    fd.ER_DOC_SERIAL_KEY,
		    fd.ER_DOC_WRITER,
		    fd.department_key AS writer_dept_key,
		    fd.department_name AS writer_dept_name,
		    fd.job_key AS writer_job_key,
		    fd.job_name AS writer_job_name,
		    fd.ER_DOC_TITLE,
		    fd.ER_DOC_CREATE_DATE,
		    fd.ER_DOC_EMERGENCY_YN,
		    fd.ER_DOC_DELETE_YN,
		    fd.ER_DOC_STORAGE_KEY,
		    fd.ER_DOC_FILENAME,
		    fd.ER_DOC_STATE,
		    fd.ER_DOC_STATE_UPDATE_DATE,
		    fd.ER_DOC_LAST_UPDATER,
		    fd.ER_DOC_LAST_UPDATE_REASON,
		    ef.ER_FILE_KEY,
		    ef.ER_FILE_ORI_NAME,
		    ef.ER_FILE_RENAME,
		    ef.ER_DOC_KEY,
		    ef.ER_DOC_SERIAL_KEY,
		    ef.ER_FILE_SIZE,
		    ef.ER_FILE_FORM,
		    ef.ER_FILE_UPLOAD_DATE,
		    ef.ER_FILE_ORDERBY,
		    ef.ER_FILE_UPLODAER,
		    ef.ER_FILE_UPDATE_DATE,
		    ef.ER_FILE_UPDATER,
		    ef.ER_FILE_UPDATE_REASON,
		    ea.ER_APPROVER_KEY,
		    ea.MEMBER_KEY,
		    ea.ER_APPROVER_NAME,
		    ea.ER_APPROVER_TEAM_KEY,
		    d.DEPARTMENT_NAME,
		    ea.ER_APPROVER_JOB_KEY,
		    j.JOB_NAME,
		    ea.ER_APPROVAL_CATEGORY,
		    ea.ER_APPROVAL_STATE,
		    ea.ER_APPROVAL_OPINION,
		    ea.ER_APPROVAL_DATE,
		    ea.ER_APPROVAL_ORDERBY,
		    er.ER_REFERER_KEY,
		    er.ER_REFERER_TEAM_KEY,
		    er.ER_REFERER_JOB_KEY,
		    er.ER_REFERER_NAME,
		    er.MEMBER_KEY AS referer_member_key
		FROM 
		    FilteredDocs fd
		LEFT JOIN 
		    ER_FILE ef ON ef.ER_DOC_SERIAL_KEY = fd.ER_DOC_SERIAL_KEY
		LEFT JOIN 
		    ER_APROVER ea ON ea.ER_DOC_SERIAL_KEY = fd.ER_DOC_SERIAL_KEY
		LEFT JOIN 
		    DEPARTMENT d ON d.DEPARTMENT_KEY = ea.ER_APPROVER_TEAM_KEY 
		LEFT JOIN 
		    job j ON j.job_KEY = ea.ER_APPROVER_JOB_KEY 
		LEFT JOIN 
		    ER_REFERER er ON er.ER_DOC_SERIAL_KEY = fd.ER_DOC_SERIAL_KEY
		ORDER BY 
		    fd.ER_DOC_EMERGENCY_YN DESC,
		    fd.ER_DOC_CREATE_DATE DESC,
		    ea.ER_APPROVAL_ORDERBY ASC
	</select>
	
	<!-- 로그인 사원의 결재 보류 문서 조회 -->
	<select id="selectPendingDocs" resultMap="documentMap" parameterType="_int">
		SELECT 
		    fd.ER_DOC_KEY,
		    fd.ER_DOC_SERIAL_KEY,
		    fd.ER_DOC_WRITER,
		    fd.department_key AS writer_dept_key,
		    fd.department_name AS writer_dept_name,
		    fd.job_key AS writer_job_key,
		    fd.job_name AS writer_job_name,
		    fd.ER_DOC_TITLE,
		    fd.ER_DOC_CREATE_DATE,
		    fd.ER_DOC_EMERGENCY_YN,
		    fd.ER_DOC_DELETE_YN,
		    fd.ER_DOC_STORAGE_KEY,
		    fd.ER_DOC_FILENAME,
		    fd.ER_DOC_STATE,
		    fd.ER_DOC_STATE_UPDATE_DATE,
		    fd.ER_DOC_LAST_UPDATER,
		    fd.ER_DOC_LAST_UPDATE_REASON,
		    ea.ER_APPROVER_KEY,
		    ea.MEMBER_KEY,
		    ea.ER_APPROVER_NAME,
		    ea.ER_APPROVER_TEAM_KEY,
		    d.DEPARTMENT_NAME,
		    ea.ER_APPROVER_JOB_KEY,
		    j.JOB_NAME,
		    ea.ER_APPROVAL_CATEGORY,
		    ea.ER_APPROVAL_STATE,
		    ea.ER_APPROVAL_OPINION,
		    ea.ER_DOC_SERIAL_KEY,
		    ea.ER_APPROVAL_DATE,
		    ea.ER_APPROVAL_ORDERBY,
		    d.DEPARTMENT_NAME,
		    ef.ER_FILE_KEY,
		    ef.ER_FILE_ORI_NAME,
		    ef.ER_FILE_RENAME,
		    ef.ER_DOC_KEY,
		    ef.ER_DOC_SERIAL_KEY,
		    ef.ER_FILE_SIZE,
		    ef.ER_FILE_FORM,
		    ef.ER_FILE_UPLOAD_DATE,
		    ef.ER_FILE_ORDERBY,
		    ef.ER_FILE_UPLODAER,
		    ef.ER_FILE_UPDATE_DATE,
		    ef.ER_FILE_UPDATER,
		    ef.ER_FILE_UPDATE_REASON,
		    er.ER_REFERER_KEY,
		    er.ER_DOC_SERIAL_KEY,
		    er.ER_REFERER_TEAM_KEY,
		    er.ER_REFERER_JOB_KEY,
		    er.ER_REFERER_NAME,
		    er.MEMBER_KEY
		FROM ER_APROVER ea 
		JOIN (
			    SELECT 
			        ed.ER_DOC_KEY,
			        ed.ER_DOC_SERIAL_KEY,
			        ed.ER_DOC_WRITER,
			        m.department_key,
			        d2.department_name,
			        m.job_key,
			        j2.job_name,
			        ed.ER_DOC_TITLE,
			        ed.ER_DOC_CREATE_DATE,
			        ed.ER_DOC_EMERGENCY_YN,
			        ed.ER_DOC_DELETE_YN,
			        ed.ER_DOC_STORAGE_KEY,
			        ed.ER_DOC_FILENAME,
			        ed.ER_DOC_STATE,
			        ed.ER_DOC_STATE_UPDATE_DATE,
			        ed.ER_DOC_LAST_UPDATER,
			        ed.ER_DOC_LAST_UPDATE_REASON
			    FROM 
			        ER_DOCUMENT ed 
			    JOIN
			        ER_APROVER ea ON ed.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
			    LEFT JOIN 
			    	MEMBER m ON ed.ER_DOC_WRITER = m.member_key
			    JOIN 
			    	DEPARTMENT d2 ON d2.department_key = m.department_key
			    JOIN 
			    	job j2 ON j2.job_key = m.job_key
			    WHERE
			        ed.ER_DOC_STATE = '처리중'
			    AND    
			        ea.member_Key = #{no}
			    AND
		        NOT EXISTS (
		            SELECT 1
		            FROM ER_APROVER a
		            WHERE a.ER_DOC_SERIAL_KEY = ed.ER_DOC_SERIAL_KEY
		            AND a.ER_APPROVAL_ORDERBY = ea.ER_APPROVAL_ORDERBY
		            AND a.ER_APPROVAL_STATE != '보류'
		        )
			) fd 
			ON fd.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			ER_FILE ef ON ef.ER_DOC_SERIAL_KEY = fd.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			DEPARTMENT d ON d.DEPARTMENT_KEY = ea.ER_APPROVER_TEAM_KEY 
		LEFT JOIN 
			job j ON j.job_KEY = ea.ER_APPROVER_JOB_KEY 
		LEFT JOIN 
			ER_REFERER er ON er.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		ORDER BY 
			ER_DOC_EMERGENCY_YN DESC,
			ER_DOC_CREATE_DATE DESC,
			ER_APPROVAL_ORDERBY asc
	</select>
	<!-- 로그인 사원의 결재 반려 문서 조회 -->
	<select id="selectRejectedDocs" resultMap="documentMap" parameterType="_int">
		SELECT 
		    fd.ER_DOC_KEY,
		    fd.ER_DOC_SERIAL_KEY,
		    fd.ER_DOC_WRITER,
		    fd.department_key AS writer_dept_key,
		    fd.department_name AS writer_dept_name,
		    fd.job_key AS writer_job_key,
		    fd.job_name AS writer_job_name,
		    fd.ER_DOC_TITLE,
		    fd.ER_DOC_CREATE_DATE,
		    fd.ER_DOC_EMERGENCY_YN,
		    fd.ER_DOC_DELETE_YN,
		    fd.ER_DOC_STORAGE_KEY,
		    fd.ER_DOC_FILENAME,
		    fd.ER_DOC_STATE,
		    fd.ER_DOC_STATE_UPDATE_DATE,
		    fd.ER_DOC_LAST_UPDATER,
		    fd.ER_DOC_LAST_UPDATE_REASON,
		    fd.ER_DOC_COMPLETE_DATE,
		    ea.ER_APPROVER_KEY,
		    ea.MEMBER_KEY,
		    ea.ER_APPROVER_NAME,
		    ea.ER_APPROVER_TEAM_KEY,
		    d.DEPARTMENT_NAME,
		    ea.ER_APPROVER_JOB_KEY,
		    j.JOB_NAME,
		    ea.ER_APPROVAL_CATEGORY,
		    ea.ER_APPROVAL_STATE,
		    ea.ER_APPROVAL_OPINION,
		    ea.ER_DOC_SERIAL_KEY,
		    ea.ER_APPROVAL_DATE,
		    ea.ER_APPROVAL_ORDERBY,
		    d.DEPARTMENT_NAME,
		    ef.ER_FILE_KEY,
		    ef.ER_FILE_ORI_NAME,
		    ef.ER_FILE_RENAME,
		    ef.ER_DOC_KEY,
		    ef.ER_DOC_SERIAL_KEY,
		    ef.ER_FILE_SIZE,
		    ef.ER_FILE_FORM,
		    ef.ER_FILE_UPLOAD_DATE,
		    ef.ER_FILE_ORDERBY,
		    ef.ER_FILE_UPLODAER,
		    ef.ER_FILE_UPDATE_DATE,
		    ef.ER_FILE_UPDATER,
		    ef.ER_FILE_UPDATE_REASON,
		    er.ER_REFERER_KEY,
		    er.ER_DOC_SERIAL_KEY,
		    er.ER_REFERER_TEAM_KEY,
		    er.ER_REFERER_JOB_KEY,
		    er.ER_REFERER_NAME,
		    er.MEMBER_KEY
		FROM ER_APROVER ea 
		JOIN (
			    SELECT 
			        ed.ER_DOC_KEY,
			        ed.ER_DOC_SERIAL_KEY,
			        ed.ER_DOC_WRITER,
			        m.department_key,
			        d2.department_name,
			        m.job_key,
			        j2.job_name,
			        ed.ER_DOC_TITLE,
			        ed.ER_DOC_CREATE_DATE,
			        ed.ER_DOC_EMERGENCY_YN,
			        ed.ER_DOC_DELETE_YN,
			        ed.ER_DOC_STORAGE_KEY,
			        ed.ER_DOC_FILENAME,
			        ed.ER_DOC_STATE,
			        ed.ER_DOC_STATE_UPDATE_DATE,
			        ed.ER_DOC_LAST_UPDATER,
			        ed.ER_DOC_LAST_UPDATE_REASON,
			        ed.ER_DOC_COMPLETE_DATE
			    FROM 
			        ER_DOCUMENT ed 
			    JOIN
			        ER_APROVER ea ON ed.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
			    JOIN 
			    	MEMBER m ON ed.ER_DOC_WRITER = m.member_key
			    JOIN 
			    	DEPARTMENT d2 ON d2.department_key = m.department_key
			    JOIN 
			    	job j2 ON j2.job_key = m.job_key
			    WHERE
			        ed.ER_DOC_STATE = '반려'
			    AND    
			        ea.member_Key = #{no}
			) fd 
			ON fd.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			ER_FILE ef ON ef.ER_DOC_SERIAL_KEY = fd.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			DEPARTMENT d ON d.DEPARTMENT_KEY = ea.ER_APPROVER_TEAM_KEY 
		LEFT JOIN 
			job j ON j.job_KEY = ea.ER_APPROVER_JOB_KEY 
		LEFT JOIN 
			ER_REFERER er ON er.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		ORDER BY 
			ER_DOC_EMERGENCY_YN DESC,
			ER_DOC_CREATE_DATE DESC,
			ER_APPROVAL_ORDERBY asc
	</select>
	<!-- 로그인 사원의 참조 문서 조회 -->
	<select id="selectReferenceDocs" resultMap="documentMap" parameterType="_int">
		SELECT    
				d.ER_DOC_KEY,
				d.ER_DOC_SERIAL_KEY,
				d.ER_DOC_WRITER,
				d.ER_DOC_TITLE,
				d.ER_DOC_CREATE_DATE,
				d.ER_DOC_EMERGENCY_YN,
				d.ER_DOC_DELETE_YN,
				d.ER_DOC_STORAGE_KEY,
				d.ER_DOC_FILENAME,
				d.ER_DOC_STATE,
				d.ER_DOC_STATE_UPDATE_DATE,
				d.ER_DOC_LAST_UPDATER,
				d.ER_DOC_LAST_UPDATE_REASON,
				d.ER_DOC_COMPLETE_DATE,
				ef.ER_FILE_KEY,
				ef.ER_FILE_ORI_NAME,
				ef.ER_FILE_RENAME,
				ef.ER_DOC_KEY,
				ef.ER_DOC_SERIAL_KEY,
				ef.ER_FILE_SIZE,
				ef.ER_FILE_FORM,
				ef.ER_FILE_UPLOAD_DATE,
				ef.ER_FILE_ORDERBY,
				ef.ER_FILE_UPLODAER,
				ef.ER_FILE_UPDATE_DATE,
				ef.ER_FILE_UPDATER,
				ef.ER_FILE_UPDATE_REASON,
				ea.ER_APPROVER_KEY,
				ea.MEMBER_KEY,
				ea.ER_APPROVER_NAME,
				ea.ER_APPROVER_TEAM_KEY,
				ea.ER_APPROVER_JOB_KEY,
				ea.ER_APPROVAL_CATEGORY,
				ea.ER_APPROVAL_STATE,
				ea.ER_APPROVAL_OPINION,
				ea.ER_DOC_SERIAL_KEY,
				ea.ER_APPROVAL_DATE,
				ea.ER_APPROVAL_ORDERBY,
				ea.ER_APPROVER_TEAM_KEY,
				de.DEPARTMENT_NAME,
				ea.ER_APPROVER_JOB_KEY,
				j.JOB_NAME,
				er.ER_REFERER_KEY,
				er.ER_DOC_SERIAL_KEY,
				er.ER_REFERER_TEAM_KEY,
				er.ER_REFERER_JOB_KEY,
				er.ER_REFERER_NAME,
				er.MEMBER_KEY
		FROM      
			er_document d
		LEFT JOIN 
			ER_FILE ef ON ef.ER_DOC_SERIAL_KEY = d.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			er_aprover ea ON d.er_doc_serial_key = ea.er_doc_serial_key
		LEFT JOIN 
			DEPARTMENT de ON de.DEPARTMENT_KEY = ea.ER_APPROVER_TEAM_KEY 
		LEFT JOIN 
			job j ON j.job_KEY = ea.ER_APPROVER_JOB_KEY 
		LEFT JOIN 
			ER_REFERER er ON er.ER_DOC_SERIAL_KEY = d.ER_DOC_SERIAL_KEY
		WHERE     
			er.MEMBER_KEY = ${no}
		AND       
			d.er_doc_state = '처리완료'
		ORDER BY  
			d.er_doc_emergency_yn DESC,
			ER_DOC_CREATE_DATE DESC,
			ea.er_approval_orderby
	</select>
	
	<!-- 로그인 사원의 회수 문서 조회 -->
	<select id="selectRetrieveDocs" resultMap="documentMap" parameterType="_int">
		SELECT    
			d.ER_DOC_KEY, 
			d.ER_DOC_SERIAL_KEY, 
			d.ER_DOC_TITLE, 
			d.ER_DOC_CREATE_DATE, 
			d.ER_DOC_EMERGENCY_YN, 
			d.ER_DOC_DELETE_YN, 
			d.ER_DOC_STORAGE_KEY, 
			d.ER_DOC_FILENAME,
			d.ER_DOC_STATE,
			d.ER_DOC_STATE_UPDATE_DATE, 
			d.ER_DOC_LAST_UPDATER, 
			d.ER_DOC_LAST_UPDATE_REASON,
			d.ER_DOC_WRITER
		FROM      
			er_document d
		LEFT JOIN 
			er_aprover ea ON d.er_doc_serial_key = ea.er_doc_serial_key
		WHERE     
			d.er_doc_writer = #{no}
		AND       
			d.er_doc_state = '회수'
		ORDER BY  
			d.er_doc_emergency_yn DESC,
			ER_DOC_CREATE_DATE DESC,
			ea.er_approval_orderby
	</select>
	
	<!-- 로그인 사원의 반려된 문서 조회 -->
	<select id="selectMyRejectedDocs" parameterType="int" resultMap="documentMap">
		SELECT 
		    fd.ER_DOC_KEY,
		    fd.ER_DOC_SERIAL_KEY,
		    fd.ER_DOC_WRITER,
		    fd.department_key AS writer_dept_key,
		    fd.department_name AS writer_dept_name,
		    fd.job_key AS writer_job_key,
		    fd.job_name AS writer_job_name,
		    fd.ER_DOC_TITLE,
		    fd.ER_DOC_CREATE_DATE,
		    fd.ER_DOC_EMERGENCY_YN,
		    fd.ER_DOC_DELETE_YN,
		    fd.ER_DOC_STORAGE_KEY,
		    fd.ER_DOC_FILENAME,
		    fd.ER_DOC_STATE,
		    fd.ER_DOC_STATE_UPDATE_DATE,
		    fd.ER_DOC_LAST_UPDATER,
		    fd.ER_DOC_LAST_UPDATE_REASON,
		    fd.ER_DOC_COMPLETE_DATE,
		    ea.ER_APPROVER_KEY,
		    ea.MEMBER_KEY,
		    ea.ER_APPROVER_NAME,
		    ea.ER_APPROVER_TEAM_KEY,
		    d.DEPARTMENT_NAME,
		    ea.ER_APPROVER_JOB_KEY,
		    j.JOB_NAME,
		    ea.ER_APPROVAL_CATEGORY,
		    ea.ER_APPROVAL_STATE,
		    ea.ER_APPROVAL_OPINION,
		    ea.ER_DOC_SERIAL_KEY,
		    ea.ER_APPROVAL_DATE,
		    ea.ER_APPROVAL_ORDERBY,
		    d.DEPARTMENT_NAME,
		    ef.ER_FILE_KEY,
		    ef.ER_FILE_ORI_NAME,
		    ef.ER_FILE_RENAME,
		    ef.ER_DOC_KEY,
		    ef.ER_DOC_SERIAL_KEY,
		    ef.ER_FILE_SIZE,
		    ef.ER_FILE_FORM,
		    ef.ER_FILE_UPLOAD_DATE,
		    ef.ER_FILE_ORDERBY,
		    ef.ER_FILE_UPLODAER,
		    ef.ER_FILE_UPDATE_DATE,
		    ef.ER_FILE_UPDATER,
		    ef.ER_FILE_UPDATE_REASON,
		    er.ER_REFERER_KEY,
		    er.ER_DOC_SERIAL_KEY,
		    er.ER_REFERER_TEAM_KEY,
		    er.ER_REFERER_JOB_KEY,
		    er.ER_REFERER_NAME,
		    er.MEMBER_KEY
		FROM ER_APROVER ea 
		JOIN (
			    SELECT 
			        ed.ER_DOC_KEY,
			        ed.ER_DOC_SERIAL_KEY,
			        ed.ER_DOC_WRITER,
			        m.department_key,
			        d2.department_name,
			        m.job_key,
			        j2.job_name,
			        ed.ER_DOC_TITLE,
			        ed.ER_DOC_CREATE_DATE,
			        ed.ER_DOC_EMERGENCY_YN,
			        ed.ER_DOC_DELETE_YN,
			        ed.ER_DOC_STORAGE_KEY,
			        ed.ER_DOC_FILENAME,
			        ed.ER_DOC_STATE,
			        ed.ER_DOC_STATE_UPDATE_DATE,
			        ed.ER_DOC_LAST_UPDATER,
			        ed.ER_DOC_LAST_UPDATE_REASON,
			        ed.ER_DOC_COMPLETE_DATE
			    FROM 
			        ER_DOCUMENT ed 
			    JOIN
			        ER_APROVER ea ON ed.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
			    LEFT JOIN 
			    	MEMBER m ON ed.ER_DOC_WRITER = m.member_key
			    JOIN 
			    	DEPARTMENT d2 ON d2.department_key = m.department_key
			    JOIN 
			    	job j2 ON j2.job_key = m.job_key
			    WHERE
			        ed.ER_DOC_STATE = '반려'
			    AND    
			        ea.member_Key = #{no}
			) fd 
			ON fd.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			ER_FILE ef ON ef.ER_DOC_SERIAL_KEY = fd.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			DEPARTMENT d ON d.DEPARTMENT_KEY = ea.ER_APPROVER_TEAM_KEY 
		LEFT JOIN 
			job j ON j.job_KEY = ea.ER_APPROVER_JOB_KEY 
		LEFT JOIN 
			ER_REFERER er ON er.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		ORDER BY 
			ER_DOC_EMERGENCY_YN DESC,
			ER_DOC_CREATE_DATE DESC,
			ER_APPROVAL_ORDERBY asc
	</select>
	<!-- 로그인 사원의 결재 승인 문서 조회 -->
	<select id="selectCompleteDocs" parameterType="int" resultMap="documentMap">
		SELECT 
		    fd.ER_DOC_KEY,
		    fd.ER_DOC_SERIAL_KEY,
		    fd.ER_DOC_WRITER,
		    fd.department_key AS writer_dept_key,
		    fd.department_name AS writer_dept_name,
		    fd.job_key AS writer_job_key,
		    fd.job_name AS writer_job_name,
		    fd.ER_DOC_TITLE,
		    fd.ER_DOC_CREATE_DATE,
		    fd.ER_DOC_EMERGENCY_YN,
		    fd.ER_DOC_DELETE_YN,
		    fd.ER_DOC_STORAGE_KEY,
		    fd.ER_DOC_FILENAME,
		    fd.ER_DOC_STATE,
		    fd.ER_DOC_STATE_UPDATE_DATE,
		    fd.ER_DOC_LAST_UPDATER,
		    fd.ER_DOC_LAST_UPDATE_REASON,
		    ea.ER_APPROVER_KEY,
		    ea.MEMBER_KEY,
		    ea.ER_APPROVER_NAME,
		    ea.ER_APPROVER_TEAM_KEY,
		    d.DEPARTMENT_NAME,
		    ea.ER_APPROVER_JOB_KEY,
		    j.JOB_NAME,
		    ea.ER_APPROVAL_CATEGORY,
		    ea.ER_APPROVAL_STATE,
		    ea.ER_APPROVAL_OPINION,
		    ea.ER_DOC_SERIAL_KEY,
		    ea.ER_APPROVAL_DATE,
		    ea.ER_APPROVAL_ORDERBY,
		    d.DEPARTMENT_NAME,
		    ef.ER_FILE_KEY,
		    ef.ER_FILE_ORI_NAME,
		    ef.ER_FILE_RENAME,
		    ef.ER_DOC_KEY,
		    ef.ER_DOC_SERIAL_KEY,
		    ef.ER_FILE_SIZE,
		    ef.ER_FILE_FORM,
		    ef.ER_FILE_UPLOAD_DATE,
		    ef.ER_FILE_ORDERBY,
		    ef.ER_FILE_UPLODAER,
		    ef.ER_FILE_UPDATE_DATE,
		    ef.ER_FILE_UPDATER,
		    ef.ER_FILE_UPDATE_REASON,
		    er.ER_REFERER_KEY,
		    er.ER_DOC_SERIAL_KEY,
		    er.ER_REFERER_TEAM_KEY,
		    er.ER_REFERER_JOB_KEY,
		    er.ER_REFERER_NAME,
		    er.MEMBER_KEY
		FROM ER_APROVER ea 
		JOIN (
			    SELECT 
			        ed.ER_DOC_KEY,
			        ed.ER_DOC_SERIAL_KEY,
			        ed.ER_DOC_WRITER,
			        m.department_key,
			        d2.department_name,
			        m.job_key,
			        j2.job_name,
			        ed.ER_DOC_TITLE,
			        ed.ER_DOC_CREATE_DATE,
			        ed.ER_DOC_EMERGENCY_YN,
			        ed.ER_DOC_DELETE_YN,
			        ed.ER_DOC_STORAGE_KEY,
			        ed.ER_DOC_FILENAME,
			        ed.ER_DOC_STATE,
			        ed.ER_DOC_STATE_UPDATE_DATE,
			        ed.ER_DOC_LAST_UPDATER,
			        ed.ER_DOC_LAST_UPDATE_REASON
			    FROM 
			        ER_DOCUMENT ed 
			    JOIN
			        ER_APROVER ea ON ed.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
			    LEFT JOIN 
			    	MEMBER m ON ed.ER_DOC_WRITER = m.member_key
			    JOIN 
			    	DEPARTMENT d2 ON d2.department_key = m.department_key
			    JOIN 
			    	job j2 ON j2.job_key = m.job_key
			    WHERE
			        ed.ER_DOC_STATE = '처리완료'
			    AND    
			        ea.member_Key = #{no}
			) fd 
			ON fd.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			ER_FILE ef ON ef.ER_DOC_SERIAL_KEY = fd.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			DEPARTMENT d ON d.DEPARTMENT_KEY = ea.ER_APPROVER_TEAM_KEY 
		LEFT JOIN 
			job j ON j.job_KEY = ea.ER_APPROVER_JOB_KEY 
		LEFT JOIN 
			ER_REFERER er ON er.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		ORDER BY 
			ER_DOC_EMERGENCY_YN DESC,
			ER_DOC_CREATE_DATE DESC,
			ER_APPROVAL_ORDERBY asc
	</select>
	<!-- 로그인 사원의 승인된 문서 조회 -->
	<select id="selectMyCompleteDocs" parameterType="int" resultMap="documentMap">
		SELECT 
		    fd.ER_DOC_KEY,
		    fd.ER_DOC_SERIAL_KEY,
		    fd.ER_DOC_WRITER,
		    fd.department_key AS writer_dept_key,
		    fd.department_name AS writer_dept_name,
		    fd.job_key AS writer_job_key,
		    fd.job_name AS writer_job_name,
		    fd.ER_DOC_TITLE,
		    fd.ER_DOC_CREATE_DATE,
		    fd.ER_DOC_EMERGENCY_YN,
		    fd.ER_DOC_DELETE_YN,
		    fd.ER_DOC_STORAGE_KEY,
		    fd.ER_DOC_FILENAME,
		    fd.ER_DOC_STATE,
		    fd.ER_DOC_STATE_UPDATE_DATE,
		    fd.ER_DOC_LAST_UPDATER,
		    fd.ER_DOC_LAST_UPDATE_REASON,
		    fd.ER_DOC_COMPLETE_DATE,
		    ea.ER_APPROVER_KEY,
		    ea.MEMBER_KEY,
		    ea.ER_APPROVER_NAME,
		    ea.ER_APPROVER_TEAM_KEY,
		    d.DEPARTMENT_NAME,
		    ea.ER_APPROVER_JOB_KEY,
		    j.JOB_NAME,
		    ea.ER_APPROVAL_CATEGORY,
		    ea.ER_APPROVAL_STATE,
		    ea.ER_APPROVAL_OPINION,
		    ea.ER_DOC_SERIAL_KEY,
		    ea.ER_APPROVAL_DATE,
		    ea.ER_APPROVAL_ORDERBY,
		    d.DEPARTMENT_NAME,
		    ef.ER_FILE_KEY,
		    ef.ER_FILE_ORI_NAME,
		    ef.ER_FILE_RENAME,
		    ef.ER_DOC_KEY,
		    ef.ER_DOC_SERIAL_KEY,
		    ef.ER_FILE_SIZE,
		    ef.ER_FILE_FORM,
		    ef.ER_FILE_UPLOAD_DATE,
		    ef.ER_FILE_ORDERBY,
		    ef.ER_FILE_UPLODAER,
		    ef.ER_FILE_UPDATE_DATE,
		    ef.ER_FILE_UPDATER,
		    ef.ER_FILE_UPDATE_REASON,
		    er.ER_REFERER_KEY,
		    er.ER_DOC_SERIAL_KEY,
		    er.ER_REFERER_TEAM_KEY,
		    er.ER_REFERER_JOB_KEY,
		    er.ER_REFERER_NAME,
		    er.MEMBER_KEY
		FROM ER_APROVER ea 
		JOIN (
			    SELECT 
			        ed.ER_DOC_KEY,
			        ed.ER_DOC_SERIAL_KEY,
			        ed.ER_DOC_WRITER,
			        m.department_key,
			        d2.department_name,
			        m.job_key,
			        j2.job_name,
			        ed.ER_DOC_TITLE,
			        ed.ER_DOC_CREATE_DATE,
			        ed.ER_DOC_EMERGENCY_YN,
			        ed.ER_DOC_DELETE_YN,
			        ed.ER_DOC_STORAGE_KEY,
			        ed.ER_DOC_FILENAME,
			        ed.ER_DOC_STATE,
			        ed.ER_DOC_STATE_UPDATE_DATE,
			        ed.ER_DOC_LAST_UPDATER,
			        ed.ER_DOC_LAST_UPDATE_REASON,
			        ed.ER_DOC_COMPLETE_DATE
			    FROM 
			        ER_DOCUMENT ed 
			    JOIN
			        ER_APROVER ea ON ed.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
			    LEFT JOIN 
			    	MEMBER m ON ed.ER_DOC_WRITER = m.member_key
			    JOIN 
			    	DEPARTMENT d2 ON d2.department_key = m.department_key
			    JOIN 
			    	job j2 ON j2.job_key = m.job_key
			    WHERE
			        ed.ER_DOC_STATE = '처리완료'
			    AND    
			        ed.ER_DOC_WRITER = #{no}
			) fd 
			ON fd.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			ER_FILE ef ON ef.ER_DOC_SERIAL_KEY = fd.ER_DOC_SERIAL_KEY
		LEFT JOIN 
			DEPARTMENT d ON d.DEPARTMENT_KEY = ea.ER_APPROVER_TEAM_KEY 
		LEFT JOIN 
			job j ON j.job_KEY = ea.ER_APPROVER_JOB_KEY 
		LEFT JOIN 
			ER_REFERER er ON er.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		ORDER BY 
			ER_DOC_EMERGENCY_YN DESC,
			ER_DOC_CREATE_DATE DESC,
			ER_APPROVAL_ORDERBY asc
	</select>
	
	<!-- 문서 상세보기 -->
	<select id="selectDocById" parameterType="int" resultMap="documentMap">
		SELECT 
			d.ER_DOC_KEY,
			d.ER_DOC_SERIAL_KEY,
			d.ER_DOC_WRITER,
			d.ER_DOC_TITLE,
			d.ER_DOC_CREATE_DATE,
			d.ER_DOC_EMERGENCY_YN,
			d.ER_DOC_DELETE_YN,
			d.ER_DOC_STORAGE_KEY,
			d.ER_DOC_FILENAME, 
			d.ER_DOC_STATE, 
			d.ER_DOC_STATE_UPDATE_DATE,
			d.ER_DOC_LAST_UPDATER,
			d.ER_DOC_LAST_UPDATE_REASON,
			d.ER_DOC_COMPLETE_DATE,
			d.ER_DOC_FORM_KEY,
			f.ER_FILE_KEY,
			f.ER_FILE_ORI_NAME,
			f.ER_FILE_RENAME,
			f.ER_DOC_KEY,
			f.ER_DOC_SERIAL_KEY,
			f.ER_FILE_SIZE,
			f.ER_FILE_FORM,
			f.ER_FILE_UPLOAD_DATE,
			f.ER_FILE_ORDERBY,
			f.ER_FILE_UPLODAER,
			f.ER_FILE_UPDATE_DATE,
			f.ER_FILE_UPDATER,
			f.ER_FILE_UPDATE_REASON,
			ea.ER_APPROVER_KEY,
			ea.MEMBER_KEY,
			ea.ER_APPROVER_NAME,
			ea.ER_APPROVER_TEAM_KEY,
			d2.DEPARTMENT_NAME,
			ea.ER_APPROVER_JOB_KEY,
			j.JOB_NAME,
			ea.ER_APPROVAL_CATEGORY,
			ea.ER_APPROVAL_STATE,
			ea.ER_APPROVAL_OPINION,
			ea.ER_DOC_SERIAL_KEY,
			ea.ER_APPROVAL_DATE,
			ea.ER_APPROVAL_ORDERBY,
			er.ER_REFERER_KEY,
			er.ER_DOC_SERIAL_KEY,
			er.ER_REFERER_TEAM_KEY,
			d3.DEPARTMENT_NAME as ER_REFERER_TEAM_NAME,
			er.ER_REFERER_JOB_KEY,
			j2.JOB_NAME as ER_REFERER_JOB_NAME,
			er.ER_REFERER_NAME,
			er.MEMBER_KEY,
			s.ER_STORAGE_NAME,
			s.ER_STORAGE_TERM,
			sf.ER_FOLDER_NAME
		FROM   
			er_document d
        LEFT JOIN 
       		er_aprover ea ON d.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		LEFT JOIN
      		ER_REFERER er ON d.ER_DOC_SERIAL_KEY = er.ER_DOC_SERIAL_KEY 
		LEFT JOIN
			job j ON ea.ER_APPROVER_JOB_KEY = j.JOB_KEY
		LEFT JOIN
			job j2 ON er.ER_REFERER_JOB_KEY = j2.JOB_KEY 
		LEFT JOIN
			DEPARTMENT d2 ON ea.ER_APPROVER_TEAM_KEY = d2.DEPARTMENT_KEY 
		LEFT JOIN
			DEPARTMENT d3 ON er.ER_REFERER_TEAM_KEY = d3.DEPARTMENT_KEY 
        LEFT JOIN 
        	er_file f ON d.ER_DOC_SERIAL_KEY = f.ER_DOC_SERIAL_KEY 
        LEFT JOIN
      		ER_STORAGE s ON d.ER_DOC_STORAGE_KEY = s.ER_STORAGE_KEY
      	LEFT JOIN
      		ER_STORAGE_FOLDER sf ON s.ER_STORAGE_FOLDER_KEY = sf.ER_FOLDER_KEY
		WHERE  
			d.ER_DOC_KEY = #{docId}
		ORDER BY
			ea.ER_APPROVAL_ORDERBY asc,
			ER_FILE_ORDERBY
	</select>
	<select id="selectDocBySerial" parameterType="string" resultMap="documentMap">
		SELECT 
			d.ER_DOC_KEY,
			d.ER_DOC_SERIAL_KEY,
			d.ER_DOC_WRITER,
			d.ER_DOC_TITLE,
			d.ER_DOC_CREATE_DATE,
			d.ER_DOC_EMERGENCY_YN,
			d.ER_DOC_DELETE_YN,
			d.ER_DOC_STORAGE_KEY,
			d.ER_DOC_FILENAME, 
			d.ER_DOC_STATE, 
			d.ER_DOC_STATE_UPDATE_DATE,
			d.ER_DOC_LAST_UPDATER,
			d.ER_DOC_LAST_UPDATE_REASON,
			d.ER_DOC_COMPLETE_DATE,
			d.ER_DOC_FORM_KEY,
			f.ER_FILE_KEY,
			f.ER_FILE_ORI_NAME,
			f.ER_FILE_RENAME,
			f.ER_DOC_KEY,
			f.ER_DOC_SERIAL_KEY,
			f.ER_FILE_SIZE,
			f.ER_FILE_FORM,
			f.ER_FILE_UPLOAD_DATE,
			f.ER_FILE_ORDERBY,
			f.ER_FILE_UPLODAER,
			f.ER_FILE_UPDATE_DATE,
			f.ER_FILE_UPDATER,
			f.ER_FILE_UPDATE_REASON,
			ea.ER_APPROVER_KEY,
			ea.MEMBER_KEY,
			ea.ER_APPROVER_NAME,
			ea.ER_APPROVER_TEAM_KEY,
			d2.DEPARTMENT_NAME,
			ea.ER_APPROVER_JOB_KEY,
			j.JOB_NAME,
			ea.ER_APPROVAL_CATEGORY,
			ea.ER_APPROVAL_STATE,
			ea.ER_APPROVAL_OPINION,
			ea.ER_DOC_SERIAL_KEY,
			ea.ER_APPROVAL_DATE,
			ea.ER_APPROVAL_ORDERBY,
			er.ER_REFERER_KEY,
			er.ER_DOC_SERIAL_KEY,
			er.ER_REFERER_TEAM_KEY,
			d2.DEPARTMENT_NAME as ER_REFERER_TEAM_NAME,
			er.ER_REFERER_JOB_KEY,
			j.JOB_NAME as ER_REFERER_JOB_NAME,
			er.ER_REFERER_NAME,
			er.MEMBER_KEY,
			s.ER_STORAGE_NAME,
			s.ER_STORAGE_TERM,
			sf.ER_FOLDER_NAME
		FROM   
			er_document d
        LEFT JOIN 
        	er_file f ON d.ER_DOC_SERIAL_KEY = f.ER_DOC_SERIAL_KEY 
        LEFT JOIN 
       		er_aprover ea ON d.ER_DOC_SERIAL_KEY = ea.ER_DOC_SERIAL_KEY
		LEFT JOIN
			job j ON ea.ER_APPROVER_JOB_KEY = j.JOB_KEY 
		LEFT JOIN
			DEPARTMENT d2 ON ea.ER_APPROVER_TEAM_KEY = d2.DEPARTMENT_KEY 
		LEFT JOIN
      		ER_REFERER er ON d.ER_DOC_SERIAL_KEY = er.ER_DOC_SERIAL_KEY 
      	LEFT JOIN
      		ER_STORAGE s ON d.ER_DOC_STORAGE_KEY = s.ER_STORAGE_KEY
      	LEFT JOIN
      		ER_STORAGE_FOLDER sf ON s.ER_STORAGE_FOLDER_KEY = sf.ER_FOLDER_KEY
		WHERE  
			d.ER_DOC_SERIAL_KEY = #{serial} 
		ORDER BY
			ea.ER_APPROVAL_ORDERBY asc
	</select>
	<select id="selectReferer" parameterType="string" resultMap="refererMap">
		SELECT 
			r.ER_REFERER_KEY,
			r.ER_DOC_SERIAL_KEY,
			r.ER_REFERER_TEAM_KEY,
			r.ER_REFERER_JOB_KEY,
			r.ER_REFERER_NAME,
			r.MEMBER_KEY,
			j.JOB_KEY,
			j.JOB_NAME,
			d.DEPARTMENT_KEY,
			d.DEPARTMENT_NAME
		FROM
			ER_REFERER r
		LEFT JOIN 
			JOB j on ER_REFERER_JOB_KEY = j.JOB_KEY
		LEFT JOIN
			DEPARTMENT d on ER_REFERER_TEAM_KEY = d.DEPARTMENT_KEY
		WHERE
			r.ER_DOC_SERIAL_KEY = #{erDocSerialKey}
	</select>
	<!-- 기안 -->
	<insert id="insertDoc" parameterType="document">
		INSERT INTO 
			er_document 
			(
				ER_DOC_KEY,
				ER_DOC_SERIAL_KEY,
				ER_DOC_WRITER,
				ER_DOC_TITLE,
				ER_DOC_CREATE_DATE,
				ER_DOC_EMERGENCY_YN,
				ER_DOC_DELETE_YN,
				ER_DOC_STORAGE_KEY,
				ER_DOC_FILENAME, 
				ER_DOC_STATE, 
				ER_DOC_FORM_KEY
			)
		VALUES
            (
              seq_er_doc_key.NEXTVAL,
              To_char(SYSDATE, 'YYMMDD')
                        || '-'
                        || #{erDocSerialKey}
                        || '-'
                        || To_char(seq_er_doc_serial_key.NEXTVAL),
              ${erDocWriter},
              #{erDocTitle},
              DEFAULT,
              #{erDocEmergencyYn},
              DEFAULT,
              #{erDocStorageKey},
              To_char(SYSDATE, 'YYMMDD')
                        || '-'
                        || #{erDocSerialKey}
                        || '-'
                        || To_char(seq_er_doc_serial_key.CURRVAL)
                        || '.html',
              DEFAULT,
              #{docFormKey}
            )
        <!-- 등록 문서의 시리얼키 반환 -->
		<selectKey keyProperty="erDocSerialKey" resultType="String" order="AFTER">
			SELECT To_char(SYSDATE, 'YYMMDD')
			       || '-'
			       || #{erDocSerialKey}
			       || '-'
			       || To_char(seq_er_doc_serial_key.currval)
				FROM   dual 
		</selectKey>
	</insert>
	<!-- 문서 임시저장 -->
	<insert id="insertDraftDoc" parameterType="document">
		INSERT INTO 
			er_document 
			(
				ER_DOC_KEY,
				ER_DOC_SERIAL_KEY,
				ER_DOC_WRITER,
				ER_DOC_TITLE,
				ER_DOC_CREATE_DATE,
				ER_DOC_EMERGENCY_YN,
				ER_DOC_DELETE_YN,
				ER_DOC_STORAGE_KEY,
				ER_DOC_FILENAME, 
				ER_DOC_STATE, 
				ER_DOC_STATE_UPDATE_DATE,
				ER_DOC_LAST_UPDATER,
				ER_DOC_LAST_UPDATE_REASON
			)
		VALUES
            (
              seq_er_doc_key.NEXTVAL,
              To_char(SYSDATE, 'YYMMDD')
                        || '-'
                        || #{erDocSerialKey}
                        || '-'
                        || To_char(SEQ_ER_DOC_SERIAL_KEY_DRAFT.NEXTVAL),
              #{erDocWriter},
              #{erDocTitle},
              DEFAULT,
              #{erDocEmergencyYn},
              DEFAULT,
              #{erDocStorageKey},
              To_char(SYSDATE, 'YYMMDD')
                        || '-'
                        || #{erDocSerialKey}
                        || '-'
                        || To_char(SEQ_ER_DOC_SERIAL_KEY_DRAFT.currval)
              			|| '.html',
              '임시저장',
              NULL,
              NULL,
              NULL
            )
        <!-- 등록 문서의 시리얼키 반환 -->
		<selectKey keyProperty="erDocSerialKey" resultType="String" order="AFTER">
			SELECT 
				ER_DOC_SERIAL_KEY
			FROM   
				er_document 
			WHERE
				ER_DOC_WRITER = #{erDocWriter}
			AND 
				ER_DOC_SERIAL_KEY like '%' || 'TEMP' || '%'
			AND 
				ER_DOC_SERIAL_KEY like '%' || To_char(SYSDATE, 'YYMMDD') || '%'
			AND
				ROWNUM = 1
			ORDER BY 
				ER_DOC_KEY DESC
		</selectKey>
	</insert>
	
	<!-- 문서 삭제 -->
	<delete id="deleteDraftDoc" parameterType="string">
		DELETE 
			er_document
		WHERE 
			er_doc_serial_key = #{erDocSerialKey}
	</delete>
	
	<!-- 문서 제목 변경 -->
	<update id="updateDocFilename" parameterType="string">
		UPDATE 
			er_document
	    SET 
	        er_doc_filename = #{erDocSerialKey} || '.html'
	    WHERE
	        er_doc_serial_key = #{erDocSerialKey}
	</update>
	
	<!-- 문서 상태 처리완료로 변경 -->
	<update id="updateDocStatefinalize" parameterType="string">
		UPDATE 
			er_document
	    SET 
	        er_doc_state = '처리완료',
	        ER_DOC_COMPLETE_DATE = sysdate
	    WHERE
	        er_doc_serial_key = #{erDocSerialKey}
	</update>
	
	<!-- 문서 상태 반려로 변경 -->
	<update id="updateDocStateReject" parameterType="string">
		UPDATE 
			er_document
	    SET 
	        er_doc_state = '반려',
	        ER_DOC_COMPLETE_DATE = sysdate
	    WHERE
	        er_doc_serial_key = #{erDocSerialKey}
	</update>
	
	<!-- 결재 승인 업데이트 -->
	<update id="updateApprovalState" parameterType="map">
		UPDATE 
			ER_APROVER
	    SET 
	        ER_APPROVAL_STATE = #{state, jdbcType=VARCHAR},
	        ER_APPROVAL_DATE = sysdate,
	        ER_APPROVAL_OPINION = #{msg}
	    WHERE
	        MEMBER_KEY = #{memberKey, jdbcType=INTEGER}
	    AND
	    	ER_DOC_SERIAL_KEY = #{serial}
	</update>
	
	<!-- 진행중인 문서 회수 -->
	<update id="retrieveDoc" parameterType="string">
		UPDATE 
			er_document
		SET    
			er_doc_state = '회수',
	    	er_doc_state_update_date = SYSDATE
		WHERE  
			er_doc_serial_key = #{erDocSerialKey} 
	</update>
	
	
	<!-- 첨부파일 -->
	<!-- 존재여부 확인 -->
	<select id="selectDocFile" parameterType="string" resultMap="docFileMap">
		SELECT 
			*
		FROM   
			er_file
		WHERE  
			er_doc_serial_key = #{erDocSerialKey}
	</select>
	<!-- 첨부파일 데이터 삭제 -->
	<delete id="deleteDocFile" parameterType="string">
		DELETE 
			er_file
		WHERE 
			er_doc_serial_key = #{erDocSerialKey}
	</delete>
	
	<!-- 결재자 -->
	<!-- 문서 기안시 등록 -->
	<insert id="insertApproval" parameterType="approver">
		INSERT INTO 
			er_aprover(
				ER_APPROVER_KEY,
				MEMBER_KEY,
				ER_APPROVER_NAME,
				ER_APPROVER_TEAM_KEY,
				ER_APPROVER_JOB_KEY,
				ER_APPROVAL_CATEGORY,
				ER_APPROVAL_STATE,
				ER_APPROVAL_OPINION,
				ER_DOC_SERIAL_KEY,
				ER_APPROVAL_DATE,
				ER_APPROVAL_ORDERBY
			) 
		VALUES
            (
              seq_er_approver_key.NEXTVAL,
              ${memberKey},
              #{memberName},
              #{memberTeamKey},
              #{memberJobKey},
              #{category},
              <choose>
			       <when test="state == null">
			         '대기'
			       </when>
			       <otherwise>
			         #{state}
			       </otherwise>
		     </choose>,
              #{opinion, jdbcType=VARCHAR},
              #{erDocSerialKey},
              sysdate,
              ${orderby}
            )
	</insert>
	
	<!-- 결재라인 신규 저장 -->
	<insert id="insertApproverLineStorage" parameterType="map">
		INSERT INTO
			er_ap_line_storage
			(
				ER_AP_LINE_STORAGE_KEY,
				ER_AP_LINE_STORAGE_NAME,
				MEMBER_KEY
			)
		VALUES
            (
				SEQ_ER_AP_LINE_STORAGE_KEY.NEXTVAL,
				#{name},
				#{no}
			)
		<selectKey keyProperty="erApLineStorageKey" resultType="int" order="AFTER">
	        SELECT SEQ_ER_AP_LINE_STORAGE_KEY.currval FROM DUAL
	    </selectKey>
	</insert>
	
	<!-- 결재라인 결재자 저장 -->
	<insert id="insertApproverLine" parameterType="map">
	    <selectKey keyProperty="erApLineKey" resultType="int" order="BEFORE">
	        SELECT SEQ_ER_AP_LINE_KEY.nextval FROM DUAL
	    </selectKey>
	    	INSERT INTO
				er_ap_line
				(
					ER_AP_LINE_KEY,
					ER_AP_LINE_STORAGE_KEY,
					MEMBER_KEY,
					ER_AP_TEAM_KEY,
					ER_AP_JOB_KEY,
					ER_AP_NAME,
					ER_AP_CATEGORY,
					ER_AP_ORDERBY
				)
			VALUES
	            (
					#{erApLineKey},
					#{approver.erApLineStorageKey},
					#{approver.memberKey},
					#{approver.erApTeamKey},
					#{approver.erApJobKey},
					#{approver.erApName},
					#{approver.erApCategory},
					#{approver.erApOrderby}
				) 
	</insert>
	
	<!-- 결재라인 삭제 -->
	<delete id="deleteApproverLines" parameterType="int">
		DELETE 
			ER_AP_LINE_STORAGE
		WHERE  
			ER_AP_LINE_STORAGE_KEY = #{no}
	</delete>
	
	<!-- 사원의 저장 결재라인 불러오기 -->
	<select id="selectApproverLines" parameterType="int" resultMap="approverLineStorageMap">
		SELECT 
			s.ER_AP_LINE_STORAGE_KEY,
			s.ER_AP_LINE_STORAGE_NAME,
			s.MEMBER_KEY as OWNER_MEMBER_KEY,
			l.ER_AP_LINE_KEY,
			l.ER_AP_LINE_STORAGE_KEY,
			l.MEMBER_KEY ,
			l.ER_AP_TEAM_KEY,
			d.DEPARTMENT_NAME,
			l.ER_AP_JOB_KEY,
			j.job_name,
			l.ER_AP_NAME,
			l.ER_AP_CATEGORY,
			l.ER_AP_ORDERBY
		FROM
			ER_AP_line_STORAGE s
		LEFT JOIN 
			ER_AP_LINE l on s.ER_AP_LINE_STORAGE_KEY = l.ER_AP_LINE_STORAGE_KEY
		JOIN 
			JOB j ON l.ER_AP_JOB_KEY = j.JOB_KEY
		JOIN 
			DEPARTMENT d ON l.ER_AP_TEAM_KEY = d.DEPARTMENT_KEY 
		WHERE
			s.MEMBER_KEY = #{no}
		ORDER BY
			s.ER_AP_LINE_STORAGE_KEY DESC,
			l.ER_AP_ORDERBY
	</select>
	
	<!-- 특정 결재라인 결재자들 불러오기 -->
	<select id="selectApproverList" parameterType="map" resultMap="approverLineMap">
		SELECT 
			l.ER_AP_LINE_KEY,
			l.ER_AP_LINE_STORAGE_KEY,
			l.MEMBER_KEY,
			l.ER_AP_TEAM_KEY,
			d.DEPARTMENT_NAME,
			l.ER_AP_JOB_KEY,
			j.JOB_NAME
			l.ER_AP_NAME,
			l.ER_AP_CATEGORY,
			l.ER_AP_ORDERBY
		FROM
			ER_AP_LINE l
		JOIN 
			JOB j ON l.ER_AP_JOB_KEY = j.JOB_KEY
		JOIN 
			DEPARTMENT d ON l.ER_AP_TEAM_KEY = d.DEPARTMENT_KEY 
		WHERE
			l.MEMBER_KEY = #{memberNo}
		AND
			l.ER_AP_LINE_STORAGE_KEY = #{storageKey}
		ORDER BY 
		    l.ER_AP_LINE_STORAGE_KEY DESC, 
		    l.ER_AP_ORDERBY
	</select>	
	
	<!-- 해당 문서 결재자 조회 -->
	<select id="selectDocApprovers" parameterType="string" resultMap="approverMap">
		SELECT
			*
		FROM
			ER_APROVER
		WHERE
			ER_DOC_SERIAL_KEY = #{serial}
	</select>
	
	<!-- 전자문서 참조인 등록-->
	<insert id="insertReferer" parameterType="referer">
		INSERT INTO 
			ER_REFERER 
		VALUES
            (
	         SEQ_ER_REFERER_KEY.NEXTVAL,
	         #{erDocSerialKey},
	         #{memberTeamKey},
	         #{memberJobKey},
	         #{memberName},
	         ${memberKey}
            )
	</insert>
	<!-- 전자문서 첨부파일 등록 -->
	<insert id="insertDocFile" parameterType="docFile">
		<selectKey keyProperty="erDocKey" resultType="int" order="BEFORE">
	        SELECT 
	        	ER_DOC_KEY 
        	FROM
        		ER_DOCUMENT 
       		WHERE
       			ER_DOC_SERIAL_KEY = #{erDocSerialKey}
	    </selectKey>
		INSERT INTO 
			er_file
			(
			ER_FILE_KEY,
			ER_FILE_ORI_NAME,
			ER_FILE_RENAME,
			ER_DOC_KEY,
			ER_DOC_SERIAL_KEY,
			ER_FILE_SIZE,
			ER_FILE_FORM,
			ER_FILE_UPLOAD_DATE,
			ER_FILE_ORDERBY,
			ER_FILE_UPLODAER,
			ER_FILE_UPDATE_DATE,
			ER_FILE_UPDATER,
			ER_FILE_UPDATE_REASON
			)
		VALUES
            (
	         SEQ_ER_FILE_KEY.NEXTVAL,
	         #{fileOriName},
	         #{fileRename},
	         #{erDocKey},
	         #{erDocSerialKey},
	         #{fileSize},
	         #{fileForm},
	         default,
	         #{fileOrderby},
	         #{fileUploader},
	         null,
	         null,
	         null
            )
        <!-- <selectKey order="AFTER" keyProperty="fileKey" resultType="int">
        	SELECT 
        		SEQ_ER_FILE_KEY.CURRVAL
        	FROM 
        		DUAL
        </selectKey> -->
	</insert>
	<!-- 전자문서 임시저장 첨부파일 등록 -->
	<insert id="insertDraftDocFile" parameterType="docFile">
		INSERT INTO 
			er_file
			(
			ER_FILE_KEY,
			ER_FILE_ORI_NAME,
			ER_FILE_RENAME,
			ER_DOC_KEY,
			ER_DOC_SERIAL_KEY,
			ER_FILE_SIZE,
			ER_FILE_FORM,
			ER_FILE_UPLOAD_DATE,
			ER_FILE_ORDERBY,
			ER_FILE_UPLODAER,
			ER_FILE_UPDATE_DATE,
			ER_FILE_UPDATER,
			ER_FILE_UPDATE_REASON
			)
		VALUES
            (
	         SEQ_ER_FILE_KEY.NEXTVAL,
	         #{fileOriName},
	         #{fileRename},
	         #{erDocKey},
	         #{erDocSerialKey},
	         #{fileSize},
	         #{fileForm},
	         default,
	         #{fileOrderby},
	         #{fileUploader},
	         null,
	         null,
	         null
            )
	</insert>
	
	<!-- 휴가 기안시 잔여 연차 확인 -->
	<select id="selectRemainingVac" resultType="int" parameterType="int">
		SELECT
			MEMBER_VAC_REMAINING
		FROM
			MEMBER_VACATION
		WHERE
			MEMBER_VAC_YEAR = TO_CHAR(SYSDATE, 'YYYY')
		AND
			MEMBER_KEY = #{memberKey}
	</select>
	<!-- 해당 사원 휴가 신청 등록 -->
	<insert id="insertVacationApply" parameterType="vacationApply">
		<!-- 해당 사원의 휴가 계산 테이블 조회 -->
		<selectKey keyProperty="memberVacKey" resultType="int" order="BEFORE">
			SELECT 
				MEMBER_VAC_KEY
			FROM   
				MEMBER_VACATION
			WHERE
				MEMBER_VAC_YEAR = TO_CHAR(SYSDATE, 'YYYY')
			AND
				MEMBER_KEY = #{vacationMemberKey}
		</selectKey>
		INSERT INTO 
			VACATION_APPLY
			(
				VACATION_USE_KEY,
				VACATION_KEY,
				ER_DOCUMENT_KEY,
				VACATION_APPLY_DATE,
				VACATION_APPLY_STATUS,
				VACATION_START_DATE,
				VACATION_END_DATE,
				VACATION_USE_COUNT,
				VACATION_MEMBER_KEY,
				VACATION_REASON,
				MEMBER_VAC_KEY
			)
		VALUES
            (
		         SEQ_VACATION_USE_KEY.NEXTVAL,
		         #{vacationKey},
		         #{vacationDocSerialKey},
		         default,
		         default,
		         #{vacationStartDate, jdbcType=TIMESTAMP},
		         #{vacationEndDate, jdbcType=TIMESTAMP},
		         #{vacationUseCount},
		         #{vacationMemberKey},
		         #{vacationReason},
		         #{memberVacKey}
            )
	</insert>
	<!-- 해당 사원 휴가 신청 등록 -->
	<insert id="insertVacationApplyDraft" parameterType="vacationApply">
		<!-- 해당 사원의 휴가 계산 테이블 조회 -->
		<selectKey keyProperty="memberVacKey" resultType="int" order="BEFORE">
			SELECT 
				MEMBER_VAC_KEY
			FROM   
				MEMBER_VACATION
			WHERE
				MEMBER_VAC_YEAR = TO_CHAR(SYSDATE, 'YYYY')
			AND
				MEMBER_KEY = #{vacationMemberKey}
		</selectKey>
		INSERT INTO 
			VACATION_APPLY
			(
				VACATION_USE_KEY,
				VACATION_KEY,
				ER_DOCUMENT_KEY,
				VACATION_APPLY_DATE,
				VACATION_APPLY_STATUS,
				VACATION_START_DATE,
				VACATION_END_DATE,
				VACATION_USE_COUNT,
				VACATION_MEMBER_KEY,
				VACATION_REASON,
				MEMBER_VAC_KEY
			)
		VALUES
            (
		         SEQ_VACATION_USE_KEY.NEXTVAL,
		         #{vacationKey},
		         #{vacationDocSerialKey},
		         default,
		         '임시저장',
		         #{vacationStartDate, jdbcType=TIMESTAMP},
		         #{vacationEndDate, jdbcType=TIMESTAMP},
		         #{vacationUseCount},
		         #{vacationMemberKey},
		         #{vacationReason},
		         #{memberVacKey}
            )
	</insert>
	<!-- 휴가신청서 신청 상태 변경 -->
	<update id="updateVacationApply" parameterType="map">
		UPDATE
			VACATION_APPLY
		SET
			VACATION_APPLY_STATUS = #{status},
			VACATION_UPDATE_DATE = SYSDATE
		WHERE
			ER_DOCUMENT_KEY = #{docSerial}
	</update>
	<!-- 휴가신청서 삭제 -->
	<delete id="deleteVacationApply" parameterType="string">
		DELETE 
			VACATION_APPLY
		WHERE  
			ER_DOCUMENT_KEY = #{serial}
	</delete>
	<!-- 휴가신청서 결재 승인 후 차감 -->
	<update id="updateVacationCalc" parameterType="map">
		<!-- 해당 사원의 휴가 신청 차감값 가져오기 -->
		<selectKey keyProperty="vacationUseData" resultType="map" order="BEFORE">
			SELECT 
				VACATION_USE_COUNT,
				VACATION_MEMBER_KEY
			FROM   
				VACATION_APPLY
			WHERE
				ER_DOCUMENT_KEY = #{serial}
		</selectKey>
		UPDATE
			MEMBER_VACATION
		SET
			MEMBER_VAC_USED = MEMBER_VAC_USED + #{vacationUseData.VACATION_USE_COUNT},
			MEMBER_VAC_REMAINING = MEMBER_VAC_REMAINING - #{vacationUseData.VACATION_USE_COUNT}
		WHERE
			MEMBER_KEY = #{vacationUseData.VACATION_MEMBER_KEY}
		AND
			MEMBER_VAC_YEAR = TO_CHAR(SYSDATE, 'YYYY')
	</update>
	
	<!-- 추가근무 신청 등록 -->
	<insert id="insertOvertimeApply" parameterType="overtimeApply">
		INSERT INTO 
			OVERTIMEWORK
			(
				OVERTIME_KEY,
				ER_DOC_SERIAL_KEY,
				OVERTIME_APPLY_DATE,
				OVERTIME_DATE,
				OVERTIME_REASON,
				OVERTIME_STATUS,
				OVERTIME_START_TIME,
				OVERTIME_END_TIME,
				OVERTIME_MEMBER_KEY,
				OVERTIME_CATEGORY
			)
		VALUES
            (
		         SEQ_OVERTIME_KEY.NEXTVAL,
		         #{erDocSerialKey},
		         sysdate,
		         #{overtimeDate},
		         #{overtimeReason},
		         #{overtimeStatus},
		         #{overtimeStartTime, jdbcType=TIMESTAMP},
		         #{overtimeEndTime, jdbcType=TIMESTAMP},
		         #{overtimeMemberKey},
		         #{overtimeCategory}
            )
	</insert>
	<!-- 추가근무 신청 상태 변경 -->
	<update id="updateOvertiApply" parameterType="map">
		UPDATE
			OVERTIMEWORK
		SET
			OVERTIME_STATUS = #{status},
			OVERTIME_UPDATE_DATE = SYSDATE
		WHERE
			ER_DOC_SERIAL_KEY = #{docSerial}
	</update>
	<!-- 추가근무 신청 삭제 -->
	<delete id="deleteOvertimeApply" parameterType="string">
		DELETE 
			OVERTIMEWORK
		WHERE  
			ER_DOC_SERIAL_KEY = #{serial}
	</delete>
</mapper>
